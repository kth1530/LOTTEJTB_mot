<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ page import="com.lottejtb.front.air.service.*" %>
<%@ page import="com.lottejtb.comm.util.*" %>

<%@ include file="/WEB-INF/common/commTagLib.jsp"%>

<%
	String cust_cd = (String) request.getAttribute("cust_cd");
	String knm = (String) request.getAttribute("knm");
	String email = (String) request.getAttribute("email");
	String age = (String) request.getAttribute("age");
	String sex = (String) request.getAttribute("sex");
	//RsvAirVO rsvAir = (RsvAirVO) request.getAttribute("rsvAirResult");
	String cno = (String) request.getAttribute("cno");
	String M_TX_NUM = (String) request.getAttribute("M_TX_NUM");

%>
<head>
<script src="/resources/common/js/fit/pay.js"></script>
<script src="/resources/common/js/fit/common.js"></script>
<script type="text/javascript" src="https://stgstdpay.inicis.com/stdjs/INIStdPay.js" charset="UTF-8"></script>
<script type="text/javascript">
<!--
	
	/* *************************************************************************** */
	// [AJAX] 데이타 통신 부분 	
	var rsvResult = "${rsvResult.getFitRsvNo()}";
	
	var paxCnt = 0;
	var rsvAirPaxList = null;
	var totalAmtText	=	0;

	// 탑승객 1 ~ 10
	var paxNo1;
	var paxTy1;
	var passportNo1;
	var expiredt1;
	var ntCd1;
	var ntNm1;
	var publishNtcd1;
	var ctCd1;
	var localContact1;
	var paxContact1;
	var addressTy1;
	var ctCdNm1;
	var stateCd1;
	var postCd1;
	var address1;
	var undecidedYn1;

	var paxNo2;
	var paxTy2;
	var passportNo2;
	var expiredt2;
	var ntCd2;
	var ntNm2;
	var publishNtcd2;
	var ctCd2;
	var localContact2;
	var paxContact2;
	var addressTy2;
	var ctCdNm2;
	var stateCd2;
	var postCd2;
	var address2;
	var undecidedYn2;

	var paxNo3;
	var paxTy3;
	var passportNo3;
	var expiredt3;
	var ntCd3;
	var ntNm3;
	var publishNtcd3;
	var ctCd3;
	var localContact3;
	var paxContact3;
	var addressTy3;
	var ctCdNm3;
	var stateCd3;
	var postCd3;
	var address3;
	var undecidedYn3;


	var paxNo4;
	var paxTy4;
	var passportNo4;
	var expiredt4;
	var ntCd4;
	var ntNm4;
	var publishNtcd4;
	var ctCd4;
	var localContact4;
	var paxContact4;
	var addressTy4;
	var ctCdNm4;
	var stateCd4;
	var postCd4;
	var address4;
	var undecidedYn4;

	var paxNo5;
	var paxTy5;
	var passportNo5;
	var expiredt5;
	var ntCd5;
	var ntNm5;
	var publishNtcd5;
	var ctCd5;
	var localContact5;
	var paxContact5;
	var addressTy5;
	var ctCdNm5;
	var stateCd5;
	var postCd5;
	var address5;
	var undecidedYn5;

	var paxNo6;
	var paxTy6;
	var passportNo6;
	var expiredt6;
	var ntCd6;
	var ntNm6;
	var publishNtcd6;
	var ctCd6;
	var localContact6;
	var paxContact6;
	var addressTy6;
	var ctCdNm6;
	var stateCd6;
	var postCd6;
	var address6;
	var undecidedYn6;

	var paxNo7;
	var paxTy7;
	var passportNo7;
	var expiredt7;
	var ntCd7;
	var ntNm7;
	var publishNtcd7;
	var ctCd7;
	var localContact7;
	var paxContact7;
	var addressTy7;
	var ctCdNm7;
	var stateCd7;
	var postCd7;
	var address7;
	var undecidedYn7;

	var paxNo8;
	var paxTy8;
	var passportNo8;
	var expiredt8;
	var ntCd8;
	var ntNm8;
	var publishNtcd8;
	var ctCd8;
	var localContact8;
	var paxContact8;
	var addressTy8;
	var ctCdNm8;
	var stateCd8;
	var postCd8;
	var address8;
	var undecidedYn8;

	var paxNo9;
	var paxTy9;
	var passportNo9;
	var expiredt9;
	var ntCd9;
	var ntNm9;
	var publishNtcd9;
	var ctCd9;
	var localContact9;
	var paxContact9;
	var addressTy9;
	var ctCdNm9;
	var stateCd9;
	var postCd9;
	var address9;
	var undecidedYn9;

	var paxNo10;
	var paxTy10;
	var passportNo10;
	var expiredt10;
	var ntCd10;
	var ntNm10;
	var publishNtcd10;
	var ctCd10;
	var localContact10;
	var paxContact10;
	var addressTy10;
	var ctCdNm10;
	var stateCd10;
	var postCd10;
	var address10;
	var undecidedYn10;

	
	// 항공 탑승객 리스트 조회 
	function fn_AirPaxList() {

		var formData = new FormData();
		formData.append('seqNo', '${rsvResult.getAirRsvSeqno()}');

		
		cfn_ajax({
			type: "POST",
			async: false,
			url: "/free/account/srchRsvAirPaxListAjax.do",
			data: formData,
			dataType: "json",
			cache: false,
			noloading:"no",
			timeOut: (5*60*1000),
			success: function(res) {
				rsvAirPaxList = res.rsvAirPaxList;
				paxCnt = rsvAirPaxList.length;

				var html = "";
				
				// 여권 정보 입력 리스트 
				if(rsvAirPaxList != null) {
					for(var i = 0; i < rsvAirPaxList.length; i++) {

						html = html + "		<table class='ft_table2 ft_tb_tl mt7' ft-att='passportGroup'>";
						html = html + "			<input type='hidden' id='paxNo"+rsvAirPaxList[i].paxNo+"' name='paxNo"+rsvAirPaxList[i].paxNo+"' data-role='none' value='"+rsvAirPaxList[i].paxNo+"'/>";
						html = html + "			<input type='hidden' id='paxTy"+rsvAirPaxList[i].paxNo+"' name='paxTy"+rsvAirPaxList[i].paxNo+"' data-role='none' value='"+rsvAirPaxList[i].paxTyGb+"'/>";
						html = html + "			<colgroup>";
						html = html + "				<col style='width: 28%'>";
						html = html + "				<col style='width: 72%'>";
						html = html + "			</colgroup>";
						html = html + "			<tbody>";
						html = html + "				<tr>";
						html = html + "					<th>탑승객</th>";
						html = html + "					<td>" + rsvAirPaxList[i].enSurNm + " / " + rsvAirPaxList[i].enFirstNm + "</td>";
						html = html + "				</tr>";
						html = html + "				<tr>";
						html = html + "					<th>법정<br>생년월일</th>";
						html = html + "					<td><input type='text' id='ymd"+rsvAirPaxList[i].paxNo+"' name='ymd"+rsvAirPaxList[i].paxNo+"' data-role='none' placeholder='예) 19800701' value='"+rsvAirPaxList[i].ymd+"' readonly/></td>";
						html = html + "				</tr>";
						html = html + "				<tr>";
						html = html + "					<th>여권번호<em class='f_red'>*</em></th>";
						html = html + "					<td><input type='text' id='passportNo"+rsvAirPaxList[i].paxNo+"' name='passportNo"+rsvAirPaxList[i].paxNo+"' data-role='none' /></td>";
						html = html + "				</tr>";
						html = html + "				<tr>";
						html = html + "					<th>여권만료일<em class='f_red'>*</em></th>";
						html = html + "					<td><input type='text' id='expiredt"+rsvAirPaxList[i].paxNo+"' data-role='none' placeholder='예) 19800701' /></td>";
						html = html + "				</tr>";
						html = html + "				<tr>";
						html = html + "					<th>국적</th>";
						html = html + "					<td><select id='ntCd"+rsvAirPaxList[i].paxNo+"' name='ntCd"+rsvAirPaxList[i].paxNo+"' class='fr_select' data-role='none'>";
						html = html + "							<option value=''>선택하세요</option>";
						html = html + "							<option value='KR'>대한민국</option>";
						html = html + "					</select></td>";
						html = html + "				</tr>";
						html = html + "				<tr>";
						html = html + "					<th>발행국</th>";
						html = html + "					<td><select id='publishNtCd"+rsvAirPaxList[i].paxNo+"' name='publishNtCd"+rsvAirPaxList[i].paxNo+"' class='fr_select' data-role='none'>";
						html = html + "							<option value=''>선택하세요</option>";
						html = html + "							<option value='KR'>대한민국</option>";
						html = html + "					</select></td>";
						html = html + "				</tr>";
						html = html + "			</tbody>";
						html = html + "		</table>";


					}
				}

				
				$("#span_airRsvPaxList").html(html);

				html = "";
				// 목적지/거주지 정보 등록
				if(rsvAirPaxList != null) {
					for(var i = 0; i < rsvAirPaxList.length; i++) {
						html = html + "	<table class='ft_table2 ft_tb_tl mt7' ft-att='addressGroup'>";
						html = html + "		<input type='hidden' id='paxNo"+rsvAirPaxList[i].paxNo+"' name='paxNo"+rsvAirPaxList[i].paxNo+"' data-role='none' value='"+rsvAirPaxList[i].paxNo+"'/>";
						html = html + "		<input type='hidden' id='paxTy"+rsvAirPaxList[i].paxNo+"' name='paxTy"+rsvAirPaxList[i].paxNo+"' data-role='none' value='"+rsvAirPaxList[i].paxTyGb+"'/>";						
						html = html + "		<colgroup>";
						html = html + "			<col style='width: 28%'>";
						html = html + "			<col style='width: 72%'>";
						html = html + "		</colgroup>";
						html = html + "		<tbody>";
						html = html + "			<tr>";
						html = html + "				<th>탑승객</th>";
						html = html + "				<td>" + rsvAirPaxList[i].enSurNm + " / " + rsvAirPaxList[i].enFirstNm + "</td>";
						html = html + "			</tr>";
						html = html + "			<tr>";
						html = html + "				<th>구분</th>";
						html = html + "				<td><select id='addressTy"+rsvAirPaxList[i].paxNo+"' name='addressTy"+rsvAirPaxList[i].paxNo+"' class='fr_select' data-role='none'>";
						html = html + "						<option value=''>선택하세요</option>";
						html = html + "						<option value='D'>목적지</option>";
						html = html + "						<option value='R'>거주지</option>";
						html = html + "				</select></td>";
						html = html + "			</tr>";

						html = html + "			<tr>";
						html = html + "				<th>체류나라</th>";
						html = html + "				<td><button class='layerOpener ft_city_btn' type='button' data-url='/pop/pop_pay_city_select.do?availTy=address&type=hotel&travelMtCnt="+rsvAirPaxList[i].paxNo+"'  data-ctn='full' data-role='none'>";
						html = html + "						<span id='ntNm"+rsvAirPaxList[i].paxNo+"' name='ntNm"+rsvAirPaxList[i].paxNo+"'>도시선택</span>";
						html = html + "					</button></td>";
						html = html + "				<input type='hidden' id='ntCd"+rsvAirPaxList[i].paxNo+"' name='ntCd"+rsvAirPaxList[i].paxNo+"' value='' />";
						html = html + "			</tr>";
						
						html = html + "			<tr>";
						html = html + "				<th>체류도시</th>";
						html = html + "				<td><button class='layerOpener ft_city_btn' type='button' data-url='/pop/pop_pay_city_select.do?availTy=address2&type=hotel&travelMtCnt="+rsvAirPaxList[i].paxNo+"'  data-ctn='full' data-role='none'>";
						html = html + "						<span id='ctCdNm"+rsvAirPaxList[i].paxNo+"' name='ctCdNm"+rsvAirPaxList[i].paxNo+"'>도시선택</span>";
						html = html + "					</button></td>";
						html = html + "				<input type='hidden' id='ctCd"+rsvAirPaxList[i].paxNo+"' name='ctCd"+rsvAirPaxList[i].paxNo+"' value='' />";
						html = html + "				<input type='hidden' id='stateCd"+rsvAirPaxList[i].paxNo+"' name='stateCd"+rsvAirPaxList[i].paxNo+"' value='' />";
						html = html + "			</tr>";

						html = html + "			<tr>";
						html = html + "				<th>우편번호<em class='f_red'>*</em></th>";
						html = html + "				<td><input type='text' data-role='none' id='postCd"+rsvAirPaxList[i].paxNo+"' name='postCd"+rsvAirPaxList[i].paxNo+"' value=''/></td>";
						html = html + "			</tr>";
						html = html + "			<tr>";
						html = html + "				<th>세부주소<em class='f_red'>*</em></th>";
						html = html + "				<td><input type='text' data-role='none' id='address"+rsvAirPaxList[i].paxNo+"' name='address"+rsvAirPaxList[i].paxNo+"' value=''/></td>";
						html = html + "			</tr>";
						html = html + "			<tr>";
						html = html + "				<th>미확정</th>";
						html = html + "				<td><p class='chkbox'>";
						html = html + "						<span><label for='chk_ck3'><input id='undecideYn"+rsvAirPaxList[i].paxNo+"' name='undecideYn"+rsvAirPaxList[i].paxNo+"' type='checkbox' data-role='none' value='Y'></label></span>";
						html = html + "					</p></td>";
						html = html + "			</tr>";
						html = html + "		</tbody>";
						html = html + "	</table>";				
					}
				}	

				$("#div_airPaxArrList").html(html);		
	/**
	불필요한 항목이라 제외됨 . 2017-02-16
				html = "";
				// 비자 정보 등록
				if(rsvAirPaxList != null) {
					for(var i = 0; i < rsvAirPaxList.length; i++) {

						html = html + "	<table class='ft_table2 ft_tb_tl mt7'>";
						html = html + "		<input type='hidden' id='paxNo"+rsvAirPaxList[i].paxNo+"' name='paxNo"+rsvAirPaxList[i].paxNo+"' data-role='none' value='"+rsvAirPaxList[i].paxNo+"'/>";
						html = html + "		<input type='hidden' id='paxTy"+rsvAirPaxList[i].paxNo+"' name='paxTy"+rsvAirPaxList[i].paxNo+"' data-role='none' value='"+rsvAirPaxList[i].paxTyGb+"'/>";						
						html = html + "		<colgroup>";
						html = html + "			<col style='width: 28%'>";
						html = html + "			<col style='width: 72%'>";
						html = html + "		</colgroup>";
						html = html + "		<tbody>";
						html = html + "			<tr>";
						html = html + "				<th>탑승객</th>";
						html = html + "				<td>" + rsvAirPaxList[i].enSurNm + " / " + rsvAirPaxList[i].enFirstNm + "</td>";
						html = html + "			</tr>";
						html = html + "			<tr>";
						html = html + "				<th>비자번호<em class='f_red'>*</em></th>";
						html = html + "				<td><input type='text' id='visaNo"+rsvAirPaxList[i].paxNo+"' name='visaNo"+rsvAirPaxList[i].paxNo+"' data-role='none' /></td>";
						html = html + "			</tr>";
						html = html + "			<tr>";
						html = html + "				<th>비자발행일<em class='f_red'>*</em></th>";
						html = html + "				<td><input type='text' id='visaDt"+rsvAirPaxList[i].paxNo+"' name='visaDt"+rsvAirPaxList[i].paxNo+"' data-role='none' placeholder='예) 2017-01-01' /></td>";
						html = html + "			</tr>";
						html = html + "			<tr>";
						html = html + "				<th>발행국</th>";
						html = html + "				<td>";
						html = html + "					<select id='visaNtCd"+rsvAirPaxList[i].paxNo+"' name='visaNtCd"+rsvAirPaxList[i].paxNo+"' class='fr_select' data-role='none'>";
						html = html + "						<option value=''>선택하세요</option>";
						html = html + "						<option value='KR'>대한민국</option>";
						html = html + "					</select>";
						html = html + "				</td>";
						html = html + "			</tr>";
						html = html + "			<tr>";
						html = html + "				<th>미확정</th>";
						html = html + "				<td>";
						html = html + "					<p class='chkbox'>";
						html = html + "						<span><label for='chk_ck6'><input id='visaConfirmYn"+rsvAirPaxList[i].paxNo+"' name='visaConfirmYn"+rsvAirPaxList[i].paxNo+"' type='checkbox' data-role='none'></label></span>";
						html = html + "					</p>";
						html = html + "				</td>";
						html = html + "			</tr>";
						html = html + "		</tbody>";
						html = html + "	</table>";

					}
				}

				$("#div_visaList").html(html);		
	**/
				// 현지 연락처 정보 전송 
				html = "";
				if(rsvAirPaxList != null) {
					for(var i = 0; i < rsvAirPaxList.length; i++) {								
						html = html + "	<table class='ft_table2 ft_tb_tl mt7' ft-att='contactGroup'>";
						html = html + "		<colgroup>";
						html = html + "			<col style='width: 28%'>";
						html = html + "			<col style='width: 72%'>";
						html = html + "		</colgroup>";
						html = html + "		<tbody>";
						html = html + "			<tr>";
						html = html + "				<th>탑승객<br>(영문명)</th>";
						html = html + "				<td>" + rsvAirPaxList[i].enSurNm + " / " + rsvAirPaxList[i].enFirstNm + "</td>";
						html = html + "			</tr>";						
	//					html = html + "			<tr>";
	//					html = html + "				<th>탑승객<br>(영문명)";
	//					html = html + "				</th>";
	//					html = html + "				<td>";
	//					html = html + "					<select id='contactNm"+rsvAirPaxList[i].paxNo+"' name='contactNm"+rsvAirPaxList[i].paxNo+"' class='fr_select' data-role='none'>";
	//					html = html + "						<option value=''>선택하세요</option>";
	//					html = html + "						<option value='" + rsvAirPaxList[i].enSurNm + " / " + rsvAirPaxList[i].enFirstNm + "'>" + rsvAirPaxList[i].enSurNm + " / " + rsvAirPaxList[i].enFirstNm + "</option>";
	//					html = html + "					</select>";
	//					html = html + "				</td>";
	//					html = html + "			</tr>";
						html = html + "			<tr>";
						html = html + "				<th>여행도시<em class='f_red'>*</em></th>";
						html = html + "				<td>";
						html = html + "					<button class='layerOpener ft_city_btn' type='button' data-url='/pop/pop_pay_city_select.do?availTy=contact&type=hotel&travelMtCnt="+rsvAirPaxList[i].paxNo+"'  data-ctn='full' data-role='none'>";
						html = html + "						<span id='ctCdNm"+rsvAirPaxList[i].paxNo+"' name='ctCdNm"+rsvAirPaxList[i].paxNo+"'>도시선택</span>";
						html = html + "						<input type='hidden' id='ctCd"+rsvAirPaxList[i].paxNo+"' name='ctCd"+rsvAirPaxList[i].paxNo+"' value='' />";			
						html = html + "					</button>";
						html = html + "				</td>";
						html = html + "			</tr>";
						html = html + "			<tr>";
						html = html + "				<th>현지연락처<em class='f_red'>*</em></th>";
						html = html + "				<td><input type='text' id='localContact"+rsvAirPaxList[i].paxNo+"' name='localContact"+rsvAirPaxList[i].paxNo+"' data-role='none' placeholder='예) 01012341234' /></td>";
						html = html + "			</tr>";
						html = html + "			<tr>";
						html = html + "				<th>탑승객연락처<em class='f_red'>*</em></th>";
						html = html + "				<td><input type='text' id='paxContact"+rsvAirPaxList[i].paxNo+"' name='paxContact"+rsvAirPaxList[i].paxNo+"' data-role='none' placeholder='예) 01012341234' /></td>";
						html = html + "			</tr>";
						html = html + "		</tbody>";
						html = html + "	</table>";
					}
				}
				$("#div_contactDetail").html(html);	

			},
			error:function(err){
				//console.log(err);
			},
			complete:function(){
				
			}
		});
	}

	function fn_lpointApply(){
		var lpoint			=	$("#lpoint").val();
		lpointAmtText		=	0;
		
		if(lpoint != "" ){
			var totalAmt	=	$("#totalAmt").text().replace('원','');
			var giftAmt		=	$("#giftAmtText").text().replace('원','');
			var lpointAmt	=	$("#lpointAmtText").text().replace('원','');
			
			//totalAmtText	=	parseInt(totalAmt) + parseInt(giftAmt) + parseInt(lpointAmt);
			//totalAmtText	=	parseInt(totalAmtText) - parseInt(giftAmt) - parseInt(lpoint);
			
			lpointAmtText = totalAmtText - lpoint
			
			$("#totalAmt").text(comma(lpointAmtText) + "원");
			$("#lpointAmtText").text(comma(lpoint) + "원");
			$("#lpointAmt").show();
		}else{
			$("#lpointAmtText").text("0");
			$("#lpointAmt").hide();
		}
	}
	
	// 여권 정보 가져오기 
	function fn_getPassportParam() {
		var passportGroup = $('table[ft-att="passportGroup"]');

		if(paxCnt > 0) {
			paxNo1 = passportGroup.find('#paxNo1').val();
			paxTy1 = passportGroup.find('#paxTy1').val();
			passportNo1 = passportGroup.find('#passportNo1').val();
			expiredt1 = passportGroup.find("#expiredt1").val();
			ntCd1 = passportGroup.find("#ntCd1 option:selected").val();
			publishNtcd1 = passportGroup.find("#publishNtcd1 option:selected").val();
		}

		if(paxCnt > 1) {
			paxNo2 = passportGroup.find('#paxNo2').val();
			paxTy2 = passportGroup.find('#paxTy2').val();
			passportNo2 = passportGroup.find('#passportNo2').val();
			expiredt2 = passportGroup.find("#expiredt2").val();
			ntCd2 = passportGroup.find("#ntCd2 option:selected").val();
			publishNtcd2 = passportGroup.find("#publishNtcd2 option:selected").val();
			
		}

		if(paxCnt > 2) {
			paxNo3 = passportGroup.find('#paxNo3').val();
			paxTy3 = passportGroup.find('#paxTy3').val();
			passportNo3 = passportGroup.find('#passportNo3').val();
			expiredt3 = passportGroup.find("#expiredt3").val();
			ntCd3 = passportGroup.find("#ntCd3 option:selected").val();
			publishNtcd3 = passportGroup.find("#publishNtcd3 option:selected").val();
			
		}

		if(paxCnt > 3) {
			paxNo4 = passportGroup.find('#paxNo4').val();
			paxTy4 = passportGroup.find('#paxTy4').val();
			passportNo4 = passportGroup.find('#passportNo4').val();
			expiredt4 = passportGroup.find("#expiredt4").val();
			ntCd4 = passportGroup.find("#ntCd4 option:selected").val();
			publishNtcd4 = passportGroup.find("#publishNtcd4 option:selected").val();
			
		}

		if(paxCnt > 4) {
			paxNo5 = passportGroup.find('#paxNo5').val();
			paxTy5 = passportGroup.find('#paxTy5').val();
			passportNo5 = passportGroup.find('#passportNo5').val();
			expiredt5 = passportGroup.find("#expiredt5").val();
			ntCd5 = passportGroup.find("#ntCd5 option:selected").val();
			publishNtcd5 = passportGroup.find("#publishNtcd5 option:selected").val();
			
		}		

		if(paxCnt > 5) {
			paxNo6 = passportGroup.find('#paxNo6').val();
			paxTy6 = passportGroup.find('#paxTy6').val();
			passportNo6 = passportGroup.find('#passportNo6').val();
			expiredt6 = passportGroup.find("#expiredt6").val();
			ntCd6 = passportGroup.find("#ntCd6 option:selected").val();
			publishNtcd6 = passportGroup.find("#publishNtcd6 option:selected").val();
			
		}	

		if(paxCnt > 6) {
			paxNo7 = passportGroup.find('#paxNo7').val();
			paxTy7 = passportGroup.find('#paxTy7').val();
			passportNo7 = passportGroup.find('#passportNo7').val();
			expiredt7 = passportGroup.find("#expiredt7").val();
			ntCd7 = passportGroup.find("#ntCd7 option:selected").val();
			publishNtcd7 = passportGroup.find("#publishNtcd7 option:selected").val();
			
		}	

		if(paxCnt > 7) {
			paxNo8 = passportGroup.find('#paxNo8').val();
			paxTy8 = passportGroup.find('#paxTy8').val();
			passportNo8 = passportGroup.find('#passportNo8').val();
			expiredt8 = passportGroup.find("#expiredt8").val();
			ntCd8 = passportGroup.find("#ntCd8 option:selected").val();
			publishNtcd8 = passportGroup.find("#publishNtcd8 option:selected").val();
			
		}		

		if(paxCnt > 8) {
			paxNo9 = passportGroup.find('#paxNo9').val();
			paxTy9 = passportGroup.find('#paxTy9').val();
			passportNo9 = passportGroup.find('#passportNo9').val();
			expiredt9 = passportGroup.find("#expiredt9").val();
			ntCd9 = passportGroup.find("#ntCd9 option:selected").val();
			publishNtcd9 = passportGroup.find("#publishNtcd9 option:selected").val();
		}	

		if(paxCnt > 9) {
			paxNo10 = passportGroup.find('#paxNo10').val();
			paxTy10 = passportGroup.find('#paxTy10').val();
			passportNo10 = passportGroup.find('#passportNo10').val();
			expiredt10 = passportGroup.find("#expiredt10").val();
			ntCd10 = passportGroup.find("#ntCd10 option:selected").val();
			publishNtcd10 = passportGroup.find("#publishNtcd10 option:selected").val();
			
		}									
	}

	// 여권정보 등록 체크 
	function fn_checkPassportParam() {
		var passportGroup = $('table[ft-att="passportGroup"]');

		if(paxCnt > 0) {			
			if(passportNo1 == '' || passportNo1 == null) {
				alert("여권 번호를 입력해 주세요.");
				passportGroup.find("#passportNo1").focus();
				return false;
			}
		}

		if(paxCnt > 1) {			
			if(passportNo2 == '' || passportNo2 == null) {
				alert("여권 번호를 입력해 주세요.");
				passportGroup.find("#passportNo2").focus();
				return false;
			}
		}

		if(paxCnt > 2) {			
			if(passportNo3 == '' || passportNo3 == null) {
				alert("여권 번호를 입력해 주세요.");
				passportGroup.find("#passportNo3").focus();
				return false;
			}
		}

		if(paxCnt > 3) {			
			if(passportNo4 == '' || passportNo4 == null) {
				alert("여권 번호를 입력해 주세요.");
				passportGroup.find("#passportNo4").focus();
				return false;
			}
		}

		if(paxCnt > 4) {			
			if(passportNo5 == '' || passportNo5 == null) {
				alert("여권 번호를 입력해 주세요.");
				passportGroup.find("#passportNo5").focus();
				return false;
			}
		}

		if(paxCnt > 5) {			
			if(passportNo6 == '' || passportNo6 == null) {
				alert("여권 번호를 입력해 주세요.");
				passportGroup.find("#passportNo6").focus();
				return false;
			}
		}

		if(paxCnt > 6) {			
			if(passportNo7 == '' || passportNo7 == null) {
				alert("여권 번호를 입력해 주세요.");
				passportGroup.find("#passportNo7").focus();
				return false;
			}
		}

		if(paxCnt > 7) {			
			if(passportNo8 == '' || passportNo8 == null) {
				alert("여권 번호를 입력해 주세요.");
				passportGroup.find("#passportNo8").focus();
				return false;
			}
		}

		if(paxCnt > 8) {			
			if(passportNo9 == '' || passportNo9 == null) {
				alert("여권 번호를 입력해 주세요.");
				passportGroup.find("#passportNo9").focus();
				return false;
			}
		}

		if(paxCnt > 9) {			
			if(passportNo10 == '' || passportNo10 == null) {
				alert("여권 번호를 입력해 주세요.");
				passportGroup.find("#passportNo10").focus();
				return false;
			}
		}
		
		return true;
	}

	// 여권 정보 저장  
	function fn_savePassport() {
		fn_getPassportParam();
		if(fn_checkPassportParam()) {
			var airPassportData = {
				// bodyDTO
				
			};
			airPassportData.bodyDTO = {
				"rsvSeqno"		: '${rsvResult.getAirRsvSeqno()}'
			};

			airPassportData.bodyDTO.paxGroup = [];

			console.log("paxCnt : " + paxCnt);

			if(paxCnt > 0) {

				airPassportData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo1,
					"paxTy"				: paxTy1,
					"passportNo"		: passportNo1,
					"expiredt"			: expiredt1,
					"ntCd"				: ntCd1,
					"publishNtcd"		: publishNtcd1
				});
			}

			if(paxCnt > 1) {
				airPassportData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo2,
					"paxTy"				: paxTy2,
					"passportNo"		: passportNo2,
					"expiredt"			: expiredt2,
					"ntCd"				: ntCd2,
					"publishNtcd"		: publishNtcd2

				});
			}	

			if(paxCnt > 2) {
				airPassportData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo3,
					"paxTy"				: paxTy3,
					"passportNo"		: passportNo3,
					"expiredt"			: expiredt3,
					"ntCd"				: ntCd3,
					"publishNtcd"		: publishNtcd3

				});
			}	

			if(paxCnt > 3) {
				airPassportData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo4,
					"paxTy"				: paxTy4,
					"passportNo"		: passportNo4,
					"expiredt"			: expiredt4,
					"ntCd"				: ntCd4,
					"publishNtcd"		: publishNtcd4

				});
			}		

			if(paxCnt > 4) {
				airPassportData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo5,
					"paxTy"				: paxTy5,
					"passportNo"		: passportNo5,
					"expiredt"			: expiredt5,
					"ntCd"				: ntCd5,
					"publishNtcd"		: publishNtcd5

				});
			}	

			if(paxCnt > 5) {
				airPassportData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo6,
					"paxTy"				: paxTy6,
					"passportNo"		: passportNo6,
					"expiredt"			: expiredt6,
					"ntCd"				: ntCd6,
					"publishNtcd"		: publishNtcd6

				});
			}	

			if(paxCnt > 6) {
				airPassportData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo7,
					"paxTy"				: paxTy7,
					"passportNo"		: passportNo7,
					"expiredt"			: expiredt7,
					"ntCd"				: ntCd7,
					"publishNtcd"		: publishNtcd7

				});
			}	

			if(paxCnt > 7) {
				airPassportData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo8,
					"paxTy"				: paxTy8,
					"passportNo"		: passportNo8,
					"expiredt"			: expiredt8,
					"ntCd"				: ntCd8,
					"publishNtcd"		: publishNtcd8

				});
			}	

			if(paxCnt > 8) {
				airPassportData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo9,
					"paxTy"				: paxTy9,
					"passportNo"		: passportNo9,
					"expiredt"			: expiredt9,
					"ntCd"				: ntCd9,
					"publishNtcd"		: publishNtcd9
				});
			}		

			if(paxCnt > 9) {
				airPassportData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo10,
					"paxTy"				: paxTy10,
					"passportNo"		: passportNo10,
					"expiredt"			: expiredt10,
					"ntCd"				: ntCd10,
					"publishNtcd"		: publishNtcd10

				});
			}	
			console.log("paxCnt : " + paxCnt);
			console.log(airPassportData);

        	gfn_callAjax ('/fit/rsv/savePassportAjax.do', airPassportData.bodyDTO, 'successPassport');				
		}																																							
	}

	// 여권 정보 저장 후 처리 
    function successPassport(_data) {

        var data = _data.result.data;
        
        if (data.length > 0) {
        }
        if(_data.result.code == 1) {
 	       alert("여권 정보가 등록되었습니다.");

        } else {
            alert("여권 정보가 등록되지 않았습니다.");
        }
    }
	
	// 목적지/거주지 정보 변경 가져오기 
	function fn_getAddressParam() {
		var addressGroup = $('table[ft-att="addressGroup"]');

		if(paxCnt > 0) {
			paxNo1 = addressGroup.find('#paxNo1').val();
			paxTy1 = addressGroup.find('#paxTy1').val();
			addressTy1 = addressGroup.find('#addressTy1 option:selected').val();
			ntCd1 = addressGroup.find("#ntCd1").val();
			ntNm1 = addressGroup.find("#ntNm1").text();
			ctCd1 = addressGroup.find("#ctCd1").val();
			ctCdNm1 = addressGroup.find("#ctCdNm1").text();	
			stateCd1 = addressGroup.find("#stateCd1").val();	
			postCd1 = addressGroup.find("#postCd1").val();
			address1 = addressGroup.find("#address1").val();
			undecideYn1 = addressGroup.find("#undecideYn1").val();
		}

		if(paxCnt > 1) {
			paxNo2 = addressGroup.find('#paxNo2').val();
			paxTy2 = addressGroup.find('#paxTy2').val();
			addressTy2 = addressGroup.find('#addressTy2 option:selected').val();
			ntCd2 = addressGroup.find("#ntCd2").val();
			ntNm1 = addressGroup.find("#ntNm1").text();
			ctCd2 = addressGroup.find("#ctCd2").val();
			ctCdNm2 = addressGroup.find("#ctCdNm2").text();	
			stateCd2 = addressGroup.find("#stateCd2").val();	
			postCd2 = addressGroup.find("#postCd2").val();
			address2 = addressGroup.find("#address2").val();
			undecideYn2 = addressGroup.find("#undecideYn2").val();		
		}

		if(paxCnt > 2) {
			paxNo3 = addressGroup.find('#paxNo3').val();
			paxTy3 = addressGroup.find('#paxTy3').val();
			addressTy3 = addressGroup.find('#addressTy3 option:selected').val();
			ntCd3 = addressGroup.find("#ntCd3").val();
			ntNm3 = addressGroup.find("#ntNm3").text();
			ctCd3 = addressGroup.find("#ctCd3").val();
			ctCdNm3 = addressGroup.find("#ctCdNm3").text();	
			stateCd3 = addressGroup.find("#stateCd3").val();	
			postCd3 = addressGroup.find("#postCd3").val();
			address3 = addressGroup.find("#address3").val();
			undecideYn3 = addressGroup.find("#undecideYn3").val();				
		}

		if(paxCnt > 3) {
			paxNo4 = addressGroup.find('#paxNo4').val();
			paxTy4 = addressGroup.find('#paxTy4').val();
			addressTy4 = addressGroup.find('#addressTy4 option:selected').val();
			ntCd4 = addressGroup.find("#ntCd4").val();
			ntNm4 = addressGroup.find("#ntNm4").text();
			ctCd4 = addressGroup.find("#ctCd4").val();
			ctCdNm4 = addressGroup.find("#ctCdNm4").text();	
			stateCd4 = addressGroup.find("#stateCd4").val();	
			postCd4 = addressGroup.find("#postCd4").val();
			address4 = addressGroup.find("#address4").val();
			undecideYn4 = addressGroup.find("#undecideYn4").val();	
		}

		if(paxCnt > 4) {
			paxNo5 = addressGroup.find('#paxNo5').val();
			paxTy5 = addressGroup.find('#paxTy5').val();
			addressTy5 = addressGroup.find('#addressTy5 option:selected').val();
			ntCd5 = addressGroup.find("#ntCd5").val();
			ntNm5 = addressGroup.find("#ntNm5").text();
			ctCd5 = addressGroup.find("#ctCd5").val();
			ctCdNm5 = addressGroup.find("#ctCdNm5").text();	
			stateCd5 = addressGroup.find("#stateCd5").val();	
			postCd5 = addressGroup.find("#postCd5").val();
			address5 = addressGroup.find("#address5").val();
			undecideYn5 = addressGroup.find("#undecideYn5").val();	
			
		}		

		if(paxCnt > 5) {
			paxNo6 = addressGroup.find('#paxNo6').val();
			paxTy6 = addressGroup.find('#paxTy6').val();
			addressTy6 = addressGroup.find('#addressTy6 option:selected').val();
			ntCd6 = addressGroup.find("#ntCd6").val();
			ntNm6 = addressGroup.find("#ntNm6").text();
			ctCd6 = addressGroup.find("#ctCd6").val();
			ctCdNm6 = addressGroup.find("#ctCdNm6").text();	
			stateCd6 = addressGroup.find("#stateCd6").val();	
			postCd6 = addressGroup.find("#postCd6").val();
			address6 = addressGroup.find("#address6").val();
			undecideYn6 = addressGroup.find("#undecideYn6").val();	
			
		}	

		if(paxCnt > 6) {
			paxNo7 = addressGroup.find('#paxNo7').val();
			paxTy7 = addressGroup.find('#paxTy7').val();
			addressTy7 = addressGroup.find('#addressTy7 option:selected').val();
			ntCd7 = addressGroup.find("#ntCd7").val();
			ntNm7 = addressGroup.find("#ntNm7").text();
			ctCd7 = addressGroup.find("#ctCd7").val();
			ctCdNm7 = addressGroup.find("#ctCdNm7").text();	
			stateCd7 = addressGroup.find("#stateCd7").val();	
			postCd7 = addressGroup.find("#postCd7").val();
			address7 = addressGroup.find("#address7").val();
			undecideYn7 = addressGroup.find("#undecideYn7").val();	
			
		}	

		if(paxCnt > 7) {
			paxNo8 = addressGroup.find('#paxNo8').val();
			paxTy8 = addressGroup.find('#paxTy8').val();
			addressTy8 = addressGroup.find('#addressTy8 option:selected').val();
			ntCd8 = addressGroup.find("#ntCd8").val();
			ntNm8 = addressGroup.find("#ntNm8").text();
			ctCd8 = addressGroup.find("#ctCd8").val();
			ctCdNm8 = addressGroup.find("#ctCdNm8").text();	
			stateCd8 = addressGroup.find("#stateCd8").val();	
			postCd8 = addressGroup.find("#postCd8").val();
			address8 = addressGroup.find("#address8").val();
			undecideYn8 = addressGroup.find("#undecideYn8").val();	
			
		}		

		if(paxCnt > 8) {
			paxNo9 = addressGroup.find('#paxNo9').val();
			paxTy9 = addressGroup.find('#paxTy9').val();
			addressTy9 = addressGroup.find('#addressTy9 option:selected').val();
			ntCd9 = addressGroup.find("#ntCd9").val();
			ntNm9 = addressGroup.find("#ntNm9").text();
			ctCd9 = addressGroup.find("#ctCd9").val();
			ctCdNm9 = addressGroup.find("#ctCdNm9").val();	
			stateCd9 = addressGroup.find("#stateCd9").val();	
			postCd9 = addressGroup.find("#postCd9").val();
			address9 = addressGroup.find("#address9").val();
			undecideYn9 = addressGroup.find("#undecideYn9").val();	
		}	

		if(paxCnt > 9) {
			paxNo10 = addressGroup.find('#paxNo10').val();
			paxTy10 = addressGroup.find('#paxTy10').val();
			addressTy10 = addressGroup.find('#addressTy10 option:selected').val();
			ntCd10 = addressGroup.find("#ntCd10").val();
			ntNm10 = addressGroup.find("#ntNm10").text();
			ctCd10 = addressGroup.find("#ctCd10").val();
			ctCdNm10 = addressGroup.find("#ctCdNm10").text();	
			stateCd10 = addressGroup.find("#stateCd10").val();	
			postCd10 = addressGroup.find("#postCd10").val();
			address10 = addressGroup.find("#address10").val();
			undecideYn10 = addressGroup.find("#undecideYn10").val();	
			
		}									
	}

	// 목적지/거주지 정보 등록 체크 
	function fn_checkAddressParam() {
		var addressGroup = $('table[ft-att="addressGroup"]');

		if(paxCnt > 0) {			
			if(address1 == '' || address1 == null) {
				alert("주소를 입력해 주세요.");
				addressGroup.find("#address1").focus();
				return false;
			}
		}

		if(paxCnt > 1) {			
			if(address2 == '' || address2 == null) {
				alert("주소를 입력해 주세요.");
				addressGroup.find("#address2").focus();
				return false;
			}
		}

		if(paxCnt > 2) {			
			if(address3 == '' || address3 == null) {
				alert("주소를 입력해 주세요.");
				addressGroup.find("#address3").focus();
				return false;
			}
		}

		if(paxCnt > 3) {			
			if(address4 == '' || address4 == null) {
				alert("주소를 입력해 주세요.");
				addressGroup.find("#address4").focus();
				return false;
			}
		}

		if(paxCnt > 4) {			
			if(address5 == '' || address5 == null) {
				alert("주소를 입력해 주세요.");
				addressGroup.find("#address5").focus();
				return false;
			}
		}

		if(paxCnt > 5) {			
			if(address6 == '' || address6 == null) {
				alert("주소를 입력해 주세요.");
				addressGroup.find("#address6").focus();
				return false;
			}
		}

		if(paxCnt > 6) {			
			if(address7 == '' || address7 == null) {
				alert("주소를 입력해 주세요.");
				addressGroup.find("#address7").focus();
				return false;
			}
		}

		if(paxCnt > 7) {			
			if(address8 == '' || address8 == null) {
				alert("주소를 입력해 주세요.");
				addressGroup.find("#address8").focus();
				return false;
			}
		}

		if(paxCnt > 8) {			
			if(address9 == '' || address9 == null) {
				alert("주소를 입력해 주세요.");
				addressGroup.find("#address9").focus();
				return false;
			}
		}

		if(paxCnt > 9) {			
			if(address10 == '' || address10 == null) {
				alert("주소를 입력해 주세요.");
				addressGroup.find("#address10").focus();
				return false;
			}
		}
		
		return true;
	}

	// 목적지/거주지 정보 등록 
	function fn_saveAddress() {
		fn_getAddressParam();
		if(fn_checkAddressParam()) {
			var airAddressData = {
				// bodyDTO
				
			};
			airAddressData.bodyDTO = {
				"rsvSeqno"		: '${rsvResult.getAirRsvSeqno()}'
			};

			airAddressData.bodyDTO.paxGroup = [];

			console.log("paxCnt : " + paxCnt);

			if(paxCnt > 0) {

				airAddressData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo1,
					"paxTy"				: paxTy1,
					"addressTy"			: addressTy1,
					"ntCd"				: ntCd1,
					"ctCd"				: ctCd1,
					"ctCdNm"			: ctCdNm1,
					"stateCd"			: stateCd1,
					"postCd"			: postCd1,
					"address"			: address1,
					"undecideYn"		: undecideYn1
				});
			}

			if(paxCnt > 1) {
				airAddressData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo2,
					"paxTy"				: paxTy2,
					"addressTy"			: addressTy2,
					"ntCd"				: ntCd2,
					"ctCd"				: ctCd2,
					"ctCdNm"			: ctCdNm2,
					"stateCd"			: stateCd2,
					"postCd"			: postCd2,
					"address"			: address2,
					"undecideYn"		: undecideYn2
				});
			}	

			if(paxCnt > 2) {
				airAddressData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo3,
					"paxTy"				: paxTy3,
					"addressTy"			: addressTy3,
					"ntCd"				: ntCd3,
					"ctCd"				: ctCd3,
					"ctCdNm"			: ctCdNm3,
					"stateCd"			: stateCd3,
					"postCd"			: postCd3,
					"address"			: address3,
					"undecideYn"		: undecideYn3
				});
			}	

			if(paxCnt > 3) {
				airAddressData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo4,
					"paxTy"				: paxTy4,
					"addressTy"			: addressTy4,
					"ntCd"				: ntCd4,
					"ctCd"				: ctCd4,
					"ctCdNm"			: ctCdNm4,
					"stateCd"			: stateCd4,
					"postCd"			: postCd4,
					"address"			: address4,
					"undecideYn"		: undecideYn4
				});
			}		

			if(paxCnt > 4) {
				airAddressData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo5,
					"paxTy"				: paxTy5,
					"addressTy"			: addressTy5,
					"ntCd"				: ntCd5,
					"ctCd"				: ctCd5,
					"ctCdNm"			: ctCdNm5,
					"stateCd"			: stateCd5,
					"postCd"			: postCd5,
					"address"			: address5,
					"undecideYn"		: undecideYn5
				});
			}	

			if(paxCnt > 5) {
				airAddressData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo6,
					"paxTy"				: paxTy6,
					"addressTy"			: addressTy6,
					"ntCd"				: ntCd6,
					"ctCd"				: ctCd6,
					"ctCdNm"			: ctCdNm6,
					"stateCd"			: stateCd6,
					"postCd"			: postCd6,
					"address"			: address6,
					"undecideYn"		: undecideYn6
				});
			}	

			if(paxCnt > 6) {
				airAddressData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo7,
					"paxTy"				: paxTy7,
					"addressTy"			: addressTy7,
					"ntCd"				: ntCd7,
					"ctCd"				: ctCd7,
					"ctCdNm"			: ctCdNm7,
					"stateCd"			: stateCd7,
					"postCd"			: postCd7,
					"address"			: address7,
					"undecideYn"		: undecideYn7
				});
			}	

			if(paxCnt > 7) {
				airAddressData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo8,
					"paxTy"				: paxTy8,
					"addressTy"			: addressTy8,
					"ntCd"				: ntCd8,
					"ctCd"				: ctCd8,
					"ctCdNm"			: ctCdNm8,
					"stateCd"			: stateCd8,
					"postCd"			: postCd8,
					"address"			: address8,
					"undecideYn"		: undecideYn8
				});
			}	

			if(paxCnt > 8) {
				airAddressData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo9,
					"paxTy"				: paxTy9,
					"addressTy"			: addressTy9,
					"ntCd"				: ntCd9,
					"ctCd"				: ctCd9,
					"ctCdNm"			: ctCdNm9,
					"stateCd"			: stateCd9,
					"postCd"			: postCd9,
					"address"			: address9,
					"undecideYn"		: undecideYn9
				});
			}		

			if(paxCnt > 9) {
				airAddressData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo10,
					"paxTy"				: paxTy10,
					"addressTy"			: addressTy10,
					"ntCd"				: ntCd10,
					"ctCd"				: ctCd10,
					"ctCdNm"			: ctCdNm10,
					"stateCd"			: stateCd10,
					"postCd"			: postCd10,
					"address"			: address10,
					"undecideYn"		: undecideYn10
				});
			}	
			console.log("paxCnt : " + paxCnt);
			console.log(airAddressData);

        	gfn_callAjax ('/fit/rsv/saveAddressAjax.do', airAddressData.bodyDTO, 'successAddress');				
		}																																							
	}

	// 목적지/거주지 정보 후 처리 
    function successAddress(_data) {

        var data = _data.result.data;
        
        if (data.length > 0) {
        }
        if(_data.result.code == 1) {
 	       alert("목적지/거주지 정보가 등록되었습니다.");
        } else {
           alert("목적지/거주지 정보가 등록되지 않았습니다.");
        }
    }

	// 목적지/거주지 정보 복사하기
	function fn_syncAddress() {
		fn_getAddressParam();

		var addressGroup = $('table[ft-att="addressGroup"]');

		if(paxCnt > 1) {

			var div_addressTy = "#addressTy2 option:eq(" +addressTy1+")";
			addressGroup.find(div_addressTy).attr("selected", "selected");
			addressGroup.find("#ntCd2").val(ntCd1);
			addressGroup.find("#ntNm2").text(ntNm1);
			addressGroup.find("#ctCd2").val(ctCd1);
			addressGroup.find("#ctCdNm2").text(ctCdNm1);	
			addressGroup.find("#stateCd2").val(stateCd1);	
			addressGroup.find("#postCd2").val(postCd1);
			addressGroup.find("#address2").val(address1);			
			if(undecideYn1 == 'Y') {
				addressGroup.find("#undecideYn2").prop('checked', true) ;
				addressGroup.find("#undecideYn2").attr('checked', true) ;			
			}
		}

		if(paxCnt > 2) {
			var div_addressTy = "#addressTy3 option:eq(" +addressTy1+")";
			addressGroup.find(div_addressTy).attr("selected", "selected");
			addressGroup.find("#ntCd3").val(ntCd1);
			addressGroup.find("#ntNm3").text(ntNm1);
			addressGroup.find("#ctCd3").val(ctCd1);
			addressGroup.find("#ctCdNm3").text(ctCdNm1);	
			addressGroup.find("#stateCd3").val(stateCd1);	
			addressGroup.find("#postCd3").val(postCd1);
			addressGroup.find("#address3").val(address1);			
			if(undecideYn1 == 'Y') {
				addressGroup.find("#undecideYn3").prop('checked', true) ;
				addressGroup.find("#undecideYn3").attr('checked', true) ;			
			}		
		}

		if(paxCnt > 3) {
			var div_addressTy = "#addressTy4 option:eq(" +addressTy1+")";
			addressGroup.find(div_addressTy).attr("selected", "selected");
			addressGroup.find("#ntCd4").val(ntCd1);
			addressGroup.find("#ntNm4").text(ntNm1);
			addressGroup.find("#ctCd4").val(ctCd1);
			addressGroup.find("#ctCdNm4").text(ctCdNm1);	
			addressGroup.find("#stateCd4").val(stateCd1);	
			addressGroup.find("#postCd4").val(postCd1);
			addressGroup.find("#address4").val(address1);			
			if(undecideYn1 == 'Y') {
				addressGroup.find("#undecideYn4").prop('checked', true) ;
				addressGroup.find("#undecideYn4").attr('checked', true) ;			
			}
		}

		if(paxCnt > 4) {
			var div_addressTy = "#addressTy5 option:eq(" +addressTy1+")";
			addressGroup.find(div_addressTy).attr("selected", "selected");
			addressGroup.find("#ntCd5").val(ntCd1);
			addressGroup.find("#ntNm5").text(ntNm1);
			addressGroup.find("#ctCd5").val(ctCd1);
			addressGroup.find("#ctCdNm5").text(ctCdNm1);	
			addressGroup.find("#stateCd5").val(stateCd1);	
			addressGroup.find("#postCd5").val(postCd1);
			addressGroup.find("#address5").val(address1);			
			if(undecideYn1 == 'Y') {
				addressGroup.find("#undecideYn5").prop('checked', true) ;
				addressGroup.find("#undecideYn5").attr('checked', true) ;			
			}	
			
		}		

		if(paxCnt > 5) {
			var div_addressTy = "#addressTy6 option:eq(" +addressTy1+")";
			addressGroup.find(div_addressTy).attr("selected", "selected");
			addressGroup.find("#ntCd6").val(ntCd1);
			addressGroup.find("#ntNm6").text(ntNm1);
			addressGroup.find("#ctCd6").val(ctCd1);
			addressGroup.find("#ctCdNm6").text(ctCdNm1);	
			addressGroup.find("#stateCd6").val(stateCd1);	
			addressGroup.find("#postCd6").val(postCd1);
			addressGroup.find("#address6").val(address1);			
			if(undecideYn1 == 'Y') {
				addressGroup.find("#undecideYn6").prop('checked', true) ;
				addressGroup.find("#undecideYn6").attr('checked', true) ;			
			}	
			
		}	

		if(paxCnt > 6) {
			var div_addressTy = "#addressTy7 option:eq(" +addressTy1+")";
			addressGroup.find(div_addressTy).attr("selected", "selected");
			addressGroup.find("#ntCd7").val(ntCd1);
			addressGroup.find("#ntNm7").text(ntNm1);
			addressGroup.find("#ctCd7").val(ctCd1);
			addressGroup.find("#ctCdNm7").text(ctCdNm1);	
			addressGroup.find("#stateCd7").val(stateCd1);	
			addressGroup.find("#postCd7").val(postCd1);
			addressGroup.find("#address7").val(address1);			
			if(undecideYn1 == 'Y') {
				addressGroup.find("#undecideYn7").prop('checked', true) ;
				addressGroup.find("#undecideYn7").attr('checked', true) ;			
			}	
			
		}	

		if(paxCnt > 7) {
			var div_addressTy = "#addressTy8 option:eq(" +addressTy1+")";
			addressGroup.find(div_addressTy).attr("selected", "selected");
			addressGroup.find("#ntCd8").val(ntCd1);
			addressGroup.find("#ntNm8").text(ntNm1);
			addressGroup.find("#ctCd8").val(ctCd1);
			addressGroup.find("#ctCdNm8").text(ctCdNm1);	
			addressGroup.find("#stateCd8").val(stateCd1);	
			addressGroup.find("#postCd8").val(postCd1);
			addressGroup.find("#address8").val(address1);			
			if(undecideYn1 == 'Y') {
				addressGroup.find("#undecideYn8").prop('checked', true) ;
				addressGroup.find("#undecideYn8").attr('checked', true) ;			
			}	
			
		}		

		if(paxCnt > 8) {
			var div_addressTy = "#addressTy9 option:eq(" +addressTy1+")";
			addressGroup.find(div_addressTy).attr("selected", "selected");
			addressGroup.find("#ntCd9").val(ntCd1);
			addressGroup.find("#ntNm9").text(ntNm1);
			addressGroup.find("#ctCd9").val(ctCd1);
			addressGroup.find("#ctCdNm9").text(ctCdNm1);	
			addressGroup.find("#stateCd9").val(stateCd1);	
			addressGroup.find("#postCd9").val(postCd1);
			addressGroup.find("#address9").val(address1);			
			if(undecideYn1 == 'Y') {
				addressGroup.find("#undecideYn9").prop('checked', true) ;
				addressGroup.find("#undecideYn9").attr('checked', true) ;			
			}	
		}	

		if(paxCnt > 9) {
			var div_addressTy = "#addressTy10 option:eq(" +addressTy1+")";
			addressGroup.find(div_addressTy).attr("selected", "selected");
			addressGroup.find("#ntCd10").val(ntCd1);
			addressGroup.find("#ntNm10").text(ntNm1);
			addressGroup.find("#ctCd10").val(ctCd1);
			addressGroup.find("#ctCdNm10").text(ctCdNm1);	
			addressGroup.find("#stateCd10").val(stateCd1);	
			addressGroup.find("#postCd10").val(postCd1);
			addressGroup.find("#address10").val(address1);			
			if(undecideYn1 == 'Y') {
				addressGroup.find("#undecideYn9").prop('checked', true) ;
				addressGroup.find("#undecideYn9").attr('checked', true) ;			
			}		
			
		}					

	}


	// 현지연락처 정보 가져오기 
	function fn_getContactParam() {
		var contactGroup = $('table[ft-att="contactGroup"]');

		if(paxCnt > 0) {
			paxNo1 = contactGroup.find('#paxNo1').val();
			paxTy1 = contactGroup.find('#paxTy1').val();
			ctCd1 = contactGroup.find("#ctCd1").val();
			ctCdNm1 = contactGroup.find("#ctCdNm1").val();	
			localContact1 = contactGroup.find("#localContact1").val();	
			paxContact1 = contactGroup.find("#paxContact1").val();
		}

		if(paxCnt > 1) {
			paxNo2 = contactGroup.find('#paxNo2').val();
			paxTy2 = contactGroup.find('#paxTy2').val();
			ctCd2 = contactGroup.find("#ctCd2").val();
			ctCdNm2 = contactGroup.find("#ctCdNm2").val();	
			localContact2 = contactGroup.find("#localContact2").val();	
			paxContact2 = contactGroup.find("#paxContact2").val();
		}

		if(paxCnt > 2) {
			paxNo3 = contactGroup.find('#paxNo3').val();
			paxTy3 = contactGroup.find('#paxTy3').val();
			ctCd3 = contactGroup.find("#ctCd3").val();
			ctCdNm3 = contactGroup.find("#ctCdNm3").val();	
			localContact3 = contactGroup.find("#localContact3").val();	
			paxContact3 = contactGroup.find("#paxContact3").val();			
		}

		if(paxCnt > 3) {
			paxNo4 = contactGroup.find('#paxNo4').val();
			paxTy4 = contactGroup.find('#paxTy4').val();
			ctCd4 = contactGroup.find("#ctCd4").val();
			ctCdNm4 = contactGroup.find("#ctCdNm4").val();	
			localContact4 = contactGroup.find("#localContact4").val();	
			paxContact4 = contactGroup.find("#paxContact4").val();		
		}

		if(paxCnt > 4) {
			paxNo5 = contactGroup.find('#paxNo5').val();
			paxTy5 = contactGroup.find('#paxTy5').val();
			ctCd5 = contactGroup.find("#ctCd5").val();
			ctCdNm5 = contactGroup.find("#ctCdNm5").val();	
			localContact5 = contactGroup.find("#localContact5").val();	
			paxContact5 = contactGroup.find("#paxContact5").val();			
			
		}		

		if(paxCnt > 5) {
			paxNo6 = contactGroup.find('#paxNo6').val();
			paxTy6 = contactGroup.find('#paxTy6').val();
			ctCd6 = contactGroup.find("#ctCd6").val();
			ctCdNm6 = contactGroup.find("#ctCdNm6").val();	
			localContact6 = contactGroup.find("#localContact6").val();	
			paxContact6 = contactGroup.find("#paxContact6").val();			
			
		}	

		if(paxCnt > 6) {
			paxNo7 = contactGroup.find('#paxNo7').val();
			paxTy7 = contactGroup.find('#paxTy7').val();
			ctCd7 = contactGroup.find("#ctCd7").val();
			ctCdNm7 = contactGroup.find("#ctCdNm7").val();	
			localContact7 = contactGroup.find("#localContact7").val();	
			paxContact7 = contactGroup.find("#paxContact7").val();			
			
		}	

		if(paxCnt > 7) {
			paxNo8 = contactGroup.find('#paxNo8').val();
			paxTy8 = contactGroup.find('#paxTy8').val();
			ctCd8 = contactGroup.find("#ctCd8").val();
			ctCdNm8 = contactGroup.find("#ctCdNm8").val();	
			localContact8 = contactGroup.find("#localContact8").val();	
			paxContact8 = contactGroup.find("#paxContact8").val();			
		}		

		if(paxCnt > 8) {
			paxNo9 = contactGroup.find('#paxNo9').val();
			paxTy9 = contactGroup.find('#paxTy9').val();
			ctCd9 = contactGroup.find("#ctCd9").val();
			ctCdNm9 = contactGroup.find("#ctCdNm9").val();	
			localContact9 = contactGroup.find("#localContact9").val();	
			paxContact9 = contactGroup.find("#paxContact9").val();			
		}	

		if(paxCnt > 9) {
			paxNo10 = contactGroup.find('#paxNo10').val();
			paxTy10 = contactGroup.find('#paxTy10').val();
			ctCd10 = contactGroup.find("#ctCd10").val();
			ctCdNm10 = contactGroup.find("#ctCdNm10").val();	
			localContact10 = contactGroup.find("#localContact10").val();	
			paxContact10 = contactGroup.find("#paxContact10").val();
		}									
	}

	// 목적지/거주지 정보 등록 체크 
	function fn_checkContactParam() {
		var contactGroup = $('table[ft-att="contactGroup"]');

		if(paxCnt > 0) {			
			if(localContact1 == '' || localContact1 == null) {
				alert("현지 연락처를 입력해 주세요.");
				contactGroup.find("#localContact1").focus();
				return false;
			}
		}

		if(paxCnt > 1) {			
			if(localContact2 == '' || localContact2 == null) {
				alert("현지 연락처를 입력해 주세요.");
				contactGroup.find("#localContact2").focus();
				return false;
			}
		}

		if(paxCnt > 2) {			
			if(localContact3 == '' || localContact3 == null) {
				alert("현지 연락처를 입력해 주세요.");
				contactGroup.find("#localContact3").focus();
				return false;
			}
		}

		if(paxCnt > 3) {			
			if(localContact4 == '' || localContact4 == null) {
				alert("현지 연락처를 입력해 주세요.");
				contactGroup.find("#localContact4").focus();
				return false;
			}
		}

		if(paxCnt > 4) {			
			if(localContact5 == '' || localContact5 == null) {
				alert("현지 연락처를 입력해 주세요.");
				contactGroup.find("#localContact5").focus();
				return false;
			}
		}

		if(paxCnt > 5) {			
			if(localContact6 == '' || localContact6 == null) {
				alert("현지 연락처를 입력해 주세요.");
				contactGroup.find("#localContact6").focus();
				return false;
			}
		}

		if(paxCnt > 6) {			
			if(localContact7 == '' || localContact7 == null) {
				alert("현지 연락처를 입력해 주세요.");
				contactGroup.find("#localContact7").focus();
				return false;
			}
		}

		if(paxCnt > 7) {			
			if(localContact8 == '' || localContact8 == null) {
				alert("현지 연락처를 입력해 주세요.");
				contactGroup.find("#localContact8").focus();
				return false;
			}
		}

		if(paxCnt > 8) {			
			if(localContact9 == '' || localContact9 == null) {
				alert("현지 연락처를 입력해 주세요.");
				contactGroup.find("#localContact9").focus();
				return false;
			}
		}

		if(paxCnt > 9) {			
			if(localContact10 == '' || localContact10 == null) {
				alert("현지 연락처를 입력해 주세요.");
				contactGroup.find("#localContact10").focus();
				return false;
			}
		}
		
		return true;
	}

	// 현지연락처 전송 
	function fn_saveContact() {
		fn_getContactParam();
		if(fn_checkContactParam()) {
			var airContactData = {
				// bodyDTO
				
			};
			airContactData.bodyDTO = {
				"rsvSeqno"	: "${rsvResult.getAirRsvSeqno()}"
			};

			airContactData.bodyDTO.paxGroup = [];

			console.log("paxCnt : " + paxCnt);

			if(paxCnt > 0) {

				airContactData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo1,
					"paxTy"				: paxTy1,
					"ctCd"				: ctCd1,
					"localContact"		: localContact1,
					"paxContact"		: paxContact1
				});
			}

			if(paxCnt > 1) {
				airContactData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo2,
					"paxTy"				: paxTy2,
					"ctCd"				: ctCd2,
					"localContact"		: localContact2,
					"paxContact"		: paxContact2
				});

			}	

			if(paxCnt > 2) {
				airContactData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo3,
					"paxTy"				: paxTy3,
					"ctCd"				: ctCd3,
					"localContact"		: localContact3,
					"paxContact"		: paxContact3
				});
			}	

			if(paxCnt > 3) {
				airContactData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo4,
					"paxTy"				: paxTy4,
					"ctCd"				: ctCd4,
					"localContact"		: localContact4,
					"paxContact"		: paxContact4
				});
			}		

			if(paxCnt > 4) {
				airContactData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo5,
					"paxTy"				: paxTy5,
					"ctCd"				: ctCd5,
					"localContact"		: localContact5,
					"paxContact"		: paxContact5
				});
			}	

			if(paxCnt > 5) {
				airContactData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo6,
					"paxTy"				: paxTy6,
					"ctCd"				: ctCd6,
					"localContact"		: localContact6,
					"paxContact"		: paxContact6
				});
			}	

			if(paxCnt > 6) {
				airContactData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo7,
					"paxTy"				: paxTy7,
					"ctCd"				: ctCd7,
					"localContact"		: localContact7,
					"paxContact"		: paxContact7
				});
			}	

			if(paxCnt > 7) {
				airContactData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo8,
					"paxTy"				: paxTy8,
					"ctCd"				: ctCd8,
					"localContact"		: localContact8,
					"paxContact"		: paxContact8
				});
			}	

			if(paxCnt > 8) {
				airContactData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo9,
					"paxTy"				: paxTy9,
					"ctCd"				: ctCd9,
					"localContact"		: localContact9,
					"paxContact"		: paxContact9
				});
			}		

			if(paxCnt > 9) {
				airContactData.bodyDTO.paxGroup.push({
					"paxNo"				: paxNo10,
					"paxTy"				: paxTy10,
					"ctCd"				: ctCd10,
					"localContact"		: localContact10,
					"paxContact"		: paxContact10
				});
			}	
			console.log("paxCnt : " + paxCnt);
			console.log(airContactData);

        	gfn_callAjax ('/fit/rsv/saveContactAjax.do', airContactData.bodyDTO, 'successContact');				
		}																																							
	}

	// 현지연락처 정보 저장 후 처리 
    function successContact(_data) {

        var data = _data.result.data;
        
        if (data.length > 0) {
        }
        if(_data.result.code == 1) {
 	       alert("현지연락처 정보가 등록되었습니다.");
        } else {
           alert("현지연락처 정보가 등록되지 않았습니다.");
        }
    }

	// 비자 정보 전송  
	//function fn_saveVisa() {		
	//}

	// 결제하기 버튼 
	function fn_payAccount() {
//		// 여권 정보 등록 
//		fn_savePassport();
//		
//		// 현지 목적지 정보 등록
//		fn_saveAddress();
//
//		// 현지 연락처 전송 
//		fn_saveContact();
//



	}

	/* *************************************************************************** */
	// [Ajax] 데이터 통신 부분 
	// [COMMON] 공통사항 
	var payAmtInfo = {}; // 결제금액 정보
	$(document).ready(function() {
	 	if('${selAir}' == 'Y'){
			fn_AirPaxList();
			$("#passport_div").show();
			$("#arr_info_div").show();
			$("#contact_info_div").show();
		}else{
			$("#passport_div").hide();
			$("#arr_info_div").hide();
			$("#contact_info_div").hide();
		}
	 	
	 	$("#cardPayAmt").change(function(){
	 		var remainAmt = parseInt(totalAmtText) - parseInt($(this).val());
	 		
	 		$("#payAmt").val(remainAmt);
	 	});
	 	
	 	$("#payAmt").change(function(){
			var remainAmt = parseInt(totalAmtText) - parseInt($(this).val());
	 		
	 		$("#cardPayAmt").val(remainAmt);
	 	});
		
		fn_init();
		fn_initEvent();

	});

	/**
	 * 초기화
	 */
	function fn_init() {
//		$("#lpointAmt").hide();
//		$("#giftAmt").hide();
		
//		$("#final_airAmt").text(comma('${rsvResult.getSaleAmtAir()}') +"원");
		$("#final_hotelAmt").text(comma('${rsvResult.getSaleAmtHtl()}') +"원");
		
		var promTotAmt = 0;
		var htlDisAmt = 0;
		var promoHTML = "";
		var promoLiHTML = "";
		
		if(nullToBlank('${rsvResult.getHtlDiscntAmt()}') != "" && '${rsvResult.getHtlDiscntAmt()}' != 0){
			promoHTML += '<p class="ppred">호텔 프로모션 <span>-'+ comma('${rsvResult.getHtlDiscntAmt()}') +'원</span></p>';
			promoLiHTML += '<p>호텔 프로모션 <span class="f_red">'+ comma('${rsvResult.getHtlDiscntAmt()}') +'원</span></p>';
			htlDisAmt = parseInt('${rsvResult.getHtlDiscntAmt()}');
		}
			
		if(nullToBlank('${rsvResult.getPromId()}') != ""){
			if(nullToBlank('${rsvResult.getPromAmount()}') != "" && '${rsvResult.getPromAmount()}' != '0'){
				promoHTML += '<p class="ppred">'+ '${rsvResult.getPromNm()}' +'<span>-'+ comma('${rsvResult.getPromAmount()}') +'원</span></p>';
				promoLiHTML += '<p>'+ '${rsvResult.getPromNm()}' +'<span class="f_red">'+ comma('${rsvResult.getPromAmount()}') +'원</span></p>';
				
				promTotAmt = parseInt('${rsvResult.getPromAmount()}');
			}else if(nullToBlank('${rsvResult.getPromRate()}') != "" && '${rsvResult.getPromRate()}' != '0'){
				var totalAmt = '${rsvResult.getSaleAmtTot()}';
				var discntTotAmt = parseInt(totalAmt) - parseInt('${rsvResult.getAirDiscntAmt()}') - parseInt('${rsvResult.getHtlDiscntAmt()}');
				promTotAmt = Math.floor(discntTotAmt * parseFloat('${rsvResult.getPromRate()}'));
				
				promoHTML += '<p class="ppred">'+ '${rsvResult.getPromNm()}' +'<span>-'+ comma(promTotAmt) +'원</span></p>';
				promoLiHTML += '<p>'+ '${rsvResult.getPromNm()}' +'<span class="f_red">'+ comma(promTotAmt) +'원</span></p>';
			}
		}
		
		
		$("#promoDiv").html(promoHTML);
		if(promoLiHTML == ""){
			$("#promoLi").hide();
		}else{
			$("#promoLi").html(promoLiHTML);
		}
		
		var htlTotAmt = parseInt('${rsvResult.getSaleAmtHtl()}');
		htlTotAmt = htlTotAmt - htlDisAmt - promTotAmt;
		totalAmtText = htlTotAmt;
		
		$("#totalAmt").text(comma(htlTotAmt) +"원");
//		$("#final_rentAmt").text(comma('${rsvResult.getSaleAmtRnt()}') +"원");

		$("#submitLpayValue").hide();
		$("#lpayAprvIf").hide();
		$("#dlp").hide();
		$("#lpayTranCertIf").hide();
		$("#lpayMemCertIf").hide();
		$("#sub").hide();
		$("#dlp").hide();
		$("#dlpcard").hide();

		$("#form1").hide();
		$("#form3").hide();

		var formData = new FormData();
		cfn_ajax({
			type : "POST",
			async : false,
			url: "/free/account/LPointSrcAjax.do",
			data: formData,
			dataType: "json",
			cache : false,
			noloading : "yes",
			timeOut : 5 * 60 * 1000,
			success: function(data) {
				if(data.code == "00"){
					var usePoint	=	comma(parseInt(data.usePoint));
					
					usePoint = "LPOINT (" + usePoint + "점)";
					
					$('#useablepoint').text(usePoint);
				}
			},
			error : function(err) {
				alert("결제 도중 오류가 발생하였습니다.");
				console.log(err);
			},
			complete : function(e) {
				console.log(e);
				fn_rsvInfo();
			}
		}); 
	}

	/**
	* 대표 예약자 정보 
	*/
	var fn_rsvInfo = function() {
		var formData = new FormData();
		formData.append("fitRsvNo", rsvResult);
		cfn_ajax({
			type : "POST",
			async : false,
			url: "/fit/htl/rsvHtlCancelInfo.do",
			data: formData,
			dataType: "json",
			cache : false,
			noloading : "yes",
			timeOut : 5 * 60 * 1000,
			success: function(data) {
				var revInfo = data.rsvHtlCancel;
				console.log(">>>=" + revInfo[0].name);
				//이니시스 결제 예약자명 전달 위함.
				var vHtml = "<input type='hidden' id='rsvName' data-role='none' class='pro_price' value=" + revInfo[0].name + " />"
				
				$('#divName').html(vHtml);		
				
//				document.lpayTranCertIf.P_REQ_NM_org.value = revInfo[0].name;
//				document.lpayMemCertIf.P_REQ_NM_org.value = revInfo[0].name;				
			},
			error : function(err) {
				console.log(err);
			},
			complete : function(e) {
				console.log(e);
			}
		}); 
			
	};
	
	
	/**
	 * 이벤트 초기화
	 */
	function fn_initEvent() {
		$('#card').click(function(){
			$('input[name=paymentMethod]').val("Card")			// 신용카드

			$('#cellCashCardNo1').val("");
			$('#bizRegNo1').val("");
			$('#bizRegNo2').val("");
			$('#bizRegNo3').val("");
			$('#vbankRegNo').val("");
			
			$("#chk_ck20").prop('checked', false) ;
			
			$('#cardPayAmt').val("");
			$('#payAmt').val("0");
			$('#bankforvbank').val("");
		});
		$('#virtual').click(function(){
			$('input[name=paymentMethod]').val("VBank");		// 무통장입금(가상계좌)
			
			
			$('#cardPayAmt').val("");
			$('#payAmt').val("0");
			$('#bankforvbank').val("");
		});
//		$('#real').click(function(){
//			$('input[name=paymentMethod]').val("DirectBank");	// 실시간계좌이체
//		});
		$('#dual').click(function(){
			$('input[name=paymentMethod]').val("Etc");			// 복합결제 
			console.log("ETC:" + $('input[name=paymentMethod]').val())
			
		});
		
		
		$('#lpay').click(function(){
			$('input[name=paymentMethod]').val("Lpay");			// LPAY 
			
			var check_form = $('form[ft-att="check"]');
			
			if( check_form.find("#MEM_M_NUM").val() == ""	){
				$('.paylist_chkbox2 #card').click();
				
				alert("로그인을 하여 주십시요.");
				return;
			}
			
			$('#cellCashCardNo1').val("");
			$('#bizRegNo1').val("");
			$('#bizRegNo2').val("");
			$('#bizRegNo3').val("");
			$('#vbankRegNo').val("");
			
			$("#chk_ck20").prop('checked', false) ;
			
			$('#cardPayAmt').val("");
			$('#payAmt').val("0");
			$('#bankforvbank').val("");
			//맴버인증
			lpayMemCertIf();
		});
		
		$('#schGift').click(function(){
			schGift("giftNo");			// 상품권조회
		});

		
		// 결제하기
		$('#btnPayment').on("click", function(){
			
			var submitform1 = $('form[ft-att="form1"]');	//	가상계좌
			var submitform3 = $('form[ft-att="form3"]');	//	신용카드
			
			var pointCheck	=	$('input[name="lottePoint"]').val();
			
			if(    (pointCheck.trim() != "" && pointCheck.trim() != "0")
				&& $('input[name="wpw"]').val() == ""	){
				alert("L.Point 본인확인을 하여 주십시요.");
				return;
			}
			
			if("Lpay" == $('input[name=paymentMethod]').val()){
				lpayTranCertIf();
			}else{
				
				if($('#userEmail').val() == "" || $('#userEmail').val() == null){
					alert("이메일을 입력해 주세요");
					$('#userEmail').fucus();
					return;
					
				}
	
				if($('#phoneNumber').val() == "" || $('#phoneNumber').val() == null){
					alert("이동전화를 입력해 주세요");
					$('#phoneNumber').fucus();
					return;
					
				}
				
				var formData = new FormData();
				var payPrice = $("#totalAmt").text().replace('원','');
				//payPrice	=	"1004";
				var type		=	"";
				
				if($('input[name=paymentMethod]').val() == "VBank"){	//	가상계좌
					type	=	"VBank";
				}else{
					type	=	"Card";
				}
				formData.append('price', payPrice);
				formData.append('type', type);
				
		 		cfn_ajax({
					type : "POST",
					async : false,
					url: "/free/account/getPayPriceAjax.do",
					data: formData,
					dataType: "json",
					cache : false,
					noloading : "yes",
					timeOut : 5 * 60 * 1000,
					success: function(data) {
						result	=	data.paymentVo;
	 					
						submitform1.find("#P_MID").val(result.mId);
						submitform1.find("#P_NEXT_URL").val(result.returnUrl);
						submitform1.find("#P_OID").val(result.oId);
						submitform1.find("#P_GOODS").val("자유여행 호텔결제[" + '${rsvResult.getFitRsvNo()}' + "]");
						
						submitform3.find("#P_MID").val(result.mId);
						submitform3.find("#P_NEXT_URL").val(result.returnUrl);
						submitform3.find("#P_OID").val(result.oId);
						submitform3.find("#P_GOODS").val("자유여행 호텔결제[" + '${rsvResult.getFitRsvNo()}' + "]");

						$('input[name="goodname"]').val("자유여행 호텔결제[" + '${rsvResult.getFitRsvNo()}' + "]"); // 상품명

						console.log("P_MID:" + submitform3.find("#P_MID").val());
						console.log("P_NEXT_URL:" + submitform3.find("#P_NEXT_URL").val());
						console.log("P_OID:" + submitform3.find("#P_OID").val());
						console.log("P_GOODS:" + submitform3.find("#P_GOODS").val());

					},
					error : function(err) {
						alert("결제 도중 오류가 발생하였습니다.");
						console.log(err);
					},
					complete : function(e) {
						console.log(e);
					}
				}); 
	
	//			fn_payAccount();
			
				// 결제 수단
			  	var paymentMethod = $('input[name=paymentMethod]').val();
				var proofCheck	=	"";
	
			  	if (paymentMethod !== '' || paymentMethod !== null) {
				  	var buyerEmail = ''; // 구매자 이메일
				  	var buyerTel = ''; // 구매자 전화번호
				  
				 	if (paymentMethod === 'Card') { // 신용카드
				 		payAmtInfo.payExpAmt = $("#totalAmt").text().replace('원','');
				 		
		        		//payAmtInfo.payExpAmt = 1004;
				 	} else if (paymentMethod === 'VBank') { // 가상계좌(무통장입금)
	
		        		var acceptmethod = 'va_receipt';
		        		$('#acceptmethod').val(acceptmethod); // 초기화
		        
		        		// 현금영수증 미 발행 여부
				        if (!$('input:checkbox[id="cashReceipt"]').is(":checked")) {
							acceptmethod = 'no_receipt';
				        }
		        		$('#acceptmethod').val(acceptmethod);
						
						// 증빙 (가상계좌, 실시간 계좌이체)
		                var proof = document.getElementsByName("proof");
		                
		                for(var i=0;i< proof.length;i++){
		                     if(proof[i].checked){
		                         if(proof[i].value == "busi"){
		     				    	var $bizRegNo1 = $('#bizRegNo1');
		    				    	var $bizRegNo2 = $('#bizRegNo2');
		    				    	var $bizRegNo3 = $('#bizRegNo3');
		    			
		    				    	if ($bizRegNo1.val() === '') {
		    				    		alert('지출 증빙용 사업자 등록번호를 입력하세요.');
		    				    		$bizRegNo1.focus();
		    				    		return false;
		    				    	}
		    			    	
		    				    	if ($bizRegNo2.val() === '') {
		    				    		alert('지출 증빙용 사업자 등록번호를 입력하세요.');
		    				    		$bizRegNo2.focus();
		    				    		return false;
		    				    	}
		    			    	
		    				    	if ($bizRegNo3.val() === '') {
		    				    		alert('지출 증빙용 사업자 등록번호를 입력하세요.');
		    				    		$bizRegNo3.focus();
		    				    		return false;
		    				    	}
		    			    	
		    						var bizRegNo = $bizRegNo1.val() + $bizRegNo2.val() + $bizRegNo3.val();
		    						$('#vbankRegNo').val(bizRegNo);
		    						
		    						proofCheck	=	"busi";
		                         }else{
		     						var $cellCashCardNo1 = $('#cellCashCardNo1');
		    			      		if ($cellCashCardNo1.val() === '') {
		    							alert('스독공제 개인용 휴대폰 번호 또는 현금영수증 카드번호를 입력하세요.');
		    					        $cellCashCardNo1.focus();
		    					        return false;
		    						}
		    		
		    						$('#vbankRegNo').val($cellCashCardNo1.val());
		                         }
		                         
		                         break;
		                     }
		                }
	
				 		payAmtInfo.payExpAmt = $("#totalAmt").text().replace('원','');
		        		//payAmtInfo.payExpAmt = 1004;
					} else if (paymentMethod === 'Etc') { // 복합결제
	
		 				var $cardPayAmt = $('#cardPayAmt');
		        
		        		if ($cardPayAmt.val() === '') {
							alert('카드 결제금액을 입력해 주세요.');
							$cardPayAmt.focus();
							return false;
						}
		        		
		        		payAmtInfo.payExpAmt = $cardPayAmt.val();
		        		
		        		var acceptmethod = 'va_receipt';
		        		$('#acceptmethod').val(acceptmethod); // 초기화
		        
		        		// 현금영수증 미 발행 여부
				        if (!$('input:checkbox[id="cashReceipt"]').is(":checked")) {
							acceptmethod = 'no_receipt';
				        }
		        		$('#acceptmethod').val(acceptmethod);
						
						// 증빙 (가상계좌, 실시간 계좌이체)
		                var proof = document.getElementsByName("proof");
		                
		                for(var i=0;i< proof.length;i++){
		                     if(proof[i].checked){
		                         if(proof[i].value == "busi"){
		     				    	var $bizRegNo1 = $('#bizRegNo1');
		    				    	var $bizRegNo2 = $('#bizRegNo2');
		    				    	var $bizRegNo3 = $('#bizRegNo3');
		    			
		    				    	if ($bizRegNo1.val() === '') {
		    				    		alert('지출 증빙용 사업자 등록번호를 입력하세요.');
		    				    		$bizRegNo1.focus();
		    				    		return false;
		    				    	}
		    			    	
		    				    	if ($bizRegNo2.val() === '') {
		    				    		alert('지출 증빙용 사업자 등록번호를 입력하세요.');
		    				    		$bizRegNo2.focus();
		    				    		return false;
		    				    	}
		    			    	
		    				    	if ($bizRegNo3.val() === '') {
		    				    		alert('지출 증빙용 사업자 등록번호를 입력하세요.');
		    				    		$bizRegNo3.focus();
		    				    		return false;
		    				    	}
		    			    	
		    						var bizRegNo = $bizRegNo1.val() + $bizRegNo2.val() + $bizRegNo3.val();
		    						$('#vbankRegNo').val(bizRegNo);
		                         
		    						proofCheck	=	"busi";
		                         }else{
		     						var $cellCashCardNo1 = $('#cellCashCardNo1');
		    			      		if ($cellCashCardNo1.val() === '') {
		    							alert('스독공제 개인용 휴대폰 번호 또는 현금영수증 카드번호를 입력하세요.');
		    					        $cellCashCardNo1.focus();
		    					        return false;
		    						}
		    		
		    						$('#vbankRegNo').val($cellCashCardNo1.val());
		                         }
		                         
		                         break;
		                     }
		                }
	
					} else if (paymentMethod === 'Lpay') { // 
						return;
					} else { // L.Pay 결제
	//					fn_authUserByLpay();
						alert("결제수단을 선택해 주세요");
						return;
					}
				}
	
			  	///////////////////////////////
				buyerEmail = $('#userEmail').val();
				buyerTel = $('#phoneNumber').val();
				var buyerName = $('#rsvName').val(); 
				///////////////////////////////
	
			  	// ### 결제요청 정보 설정 ###
				console.log('paymentMethod', paymentMethod);
			  	console.log('buyerEmail', buyerEmail);
			  	console.log('payExpAmt', payAmtInfo.payExpAmt);
			  	console.log('buyerTel', buyerTel);
			  	
			  	submitform1.find("#P_AMT").val(payAmtInfo.payExpAmt);	//	총결제금액
			  	submitform1.find("#P_UNAME").val(buyerName);			//	구매자명
			  	submitform1.find("#P_MOBILE").val(buyerTel);			//	구매자 핸드폰번호
			  	submitform1.find("#P_EMAIL").val(buyerEmail);			//	구매자 이메일

			  	submitform3.find("#P_AMT").val(payAmtInfo.payExpAmt);	//	총결제금액
			  	submitform3.find("#P_UNAME").val(buyerName);			//	구매자명
			  	submitform3.find("#P_MOBILE").val(buyerTel);			//	구매자 핸드폰번호
			  	submitform3.find("#P_EMAIL").val(buyerEmail);			//	구매자 이메일

			  	$('input[name="paymentMethod"]').val(paymentMethod === 'Etc' ? 'Card' : paymentMethod); // 결제수단 (복합결제일 경우 신용카드 결제로)
				$('input[name="buyeremail"]').val(buyerEmail); // 구매자 이메일
		 	  
	//			goodsPrice		=	splitParam[0]; 		//	상품가격
	//			startDay		=	splitParam[1]; 		//	여행시작일자
	//			cardNo			=	splitParam[2]; 		//	LPoint카드번호
	//			wpw				=	splitParam[3]; 		//	LPoint패스워드
	//			lottePoint		=	splitParam[4]; 		//	사용포인트
	//			cashPayAmt		=	splitParam[5];		//	현금결제금액	(복합결제의경우)
	//			cashType		=	splitParam[6];		//	현금영수증타입(0:소득공제(소비자용), 1:지출증빙(사업자용))
	//			cashReceipts	=	splitParam[7];		//	현금영수증인증번호(핸드폰번호, 사업자등록번호)	
	//			giftCard		=	splitParam[8]; 		//	상품권번호	 
	//			giftCardAmt		=	splitParam[9]; 		//	상품권금액	 
	//			buyerTel		=	splitParam[10]; 	//	구매자 전화번호
	//			buyerEmail		=	splitParam[11]; 	//	구매자 이메일
	//			goodName		=	splitParam[12]; 	//	상품명
	//			vcdbank			=	splitParam[13]; 	//	입금은행코드
	//			rescd			=	splitParam[14]; 	//	예약번호
	//			mid				=	splitParam[15];		//	결제구분
			  	var merchantDataVal	=	"";
	
				merchantDataVal	=	$('input[name="P_AMT"]').val();									//	상품가격(복합결제금액 제외 카드결제금액 또는 가상계좌금액)
			  	merchantDataVal	=	merchantDataVal + "	" +  $('input[name="startDay"]').val();		//	여행시작일자
			  	merchantDataVal	=	merchantDataVal + "	" + $('input[name="cardNo"]').val();		//	LPOINT 카드번호
			  	merchantDataVal	=	merchantDataVal + "	" + $('input[name="wpw"]').val();			//	LPOINT 패스워드
			  	merchantDataVal	=	merchantDataVal + "	" +	$('input[name="lottePoint"]').val();	//	사용포인트
			  	merchantDataVal	=	merchantDataVal + "	" + $('input[name="payAmt"]').val();		//	현금결제금액	(복합결제의경우)
			  	if( "busi" == proofCheck){
				  	merchantDataVal	=	merchantDataVal + "	" +  "1";								//	현금영수증타입(0:소득공제(소비자용), 1:지출증빙(사업자용))
			  	}else{
				  	merchantDataVal	=	merchantDataVal + "	" +  "0";								//	현금영수증타입(0:소득공제(소비자용), 1:지출증빙(사업자용))
			  	}
			  	merchantDataVal	=	merchantDataVal + "	" +  $('input[name="vbankRegNo"]').val();	//	현금영수증인증번호(핸드폰번호, 사업자등록번호)
			  	merchantDataVal	=	merchantDataVal + "	" +  $('input[name="giftNo"]').val();		//	상품권번호
			  	merchantDataVal	=	merchantDataVal + "	" +  $('input[name="giftNoAmt"]').val();	//	상품권금액
			  	merchantDataVal	=	merchantDataVal + "	" +  $('input[name="phoneNumber"]').val();	//	구매자 전화번호
			  	merchantDataVal	=	merchantDataVal + "	" +  $('input[name="userEmail"]').val();	//	구매자 이메일
			  	merchantDataVal	=	merchantDataVal + "	" +  encodeURIComponent($('input[name="goodname"]').val());	//	상품명
			  	merchantDataVal	=	merchantDataVal + "	" +  $("select[name=bankforvbank]").val();	//	입금은행코드
			  	merchantDataVal	=	merchantDataVal + "	" + $('input[name="resCd"]').val();			//	예약번호
			  	if($('input[name="paymentMethod"]').val() == "Card"){
			  		merchantDataVal	=	merchantDataVal + "	" + "Card";		//	결제구분
			  	}else{
			  		merchantDataVal	=	merchantDataVal + "	" + "VBank";	//	결제구분
			  	}
			  	
			  	submitform1.find("#P_NOTI").val(encodeURIComponent(merchantDataVal));			
			  	submitform3.find("#P_NOTI").val(encodeURIComponent(merchantDataVal));			
		   		
			  	console.log(submitform1.find("#P_MID").val());
			  	console.log(submitform1.find("#P_OID").val());
			  	console.log(submitform1.find("#P_AMT").val());
			  	console.log(submitform1.find("#P_UNAME").val());
			  	console.log(submitform1.find("#P_GOODS").val());
			  	console.log(submitform1.find("#P_NEXT_URL").val());
			  	console.log(submitform1.find("#P_TAX").val());
			  	console.log(submitform1.find("#P_RESERVED").val());
			  	console.log(submitform1.find("#P_NOTI").val());
			  	console.log(submitform1.find("#P_MOBILE").val());
			  	console.log(submitform1.find("#P_EMAIL").val());

			  	console.log(submitform3.find("#P_MID").val());
			  	console.log(submitform3.find("#P_OID").val());
			  	console.log(submitform3.find("#P_AMT").val());
			  	console.log(submitform3.find("#P_UNAME").val());
			  	console.log(submitform3.find("#P_GOODS").val());
			  	console.log(submitform3.find("#P_NEXT_URL").val());
			  	console.log(submitform3.find("#P_NOTI_URL").val());
			  	console.log(submitform3.find("#P_RETURN_URL").val());
			  	console.log(submitform3.find("#P_TAX").val());
			  	console.log(submitform3.find("#P_RESERVED").val());
			  	console.log(submitform3.find("#P_QUOTABASE").val());
			  	console.log(submitform3.find("#P_NOTI").val());
			  	console.log(submitform3.find("#P_MOBILE").val());
			  	console.log(submitform3.find("#P_EMAIL").val());
				
				if($('input[name=paymentMethod]').val() == "Card"){				// 신용카드
					document.getElementById("form3").submit();
//				document.getElementById("form1").submit();
				}else if(	$('input[name=paymentMethod]').val() == "VBank"){	// 무통장입금(가상계좌)
					document.getElementById("form1").submit();
				}
			}
		});
	}
	
//-->
</script>
<!-- ----------------------- L.Pay용 script start ---------------------------- -->
<script type="text/javascript">
var jobj;
function returnlpayMemCertIf( data ){
  jobj =  eval("("+data+")");

  if(jobj["RESULT_VAL"] == 'S'){
	$("#paymentInfo option").remove();
	var paymentList = jobj["MEMBER_CARD_LIST"];
	for(var i =0;i <jobj["dbio_total_count_"]; i++){
	  	$("#paymentInfo").append("<option value='"+i+"'>"+paymentList[i]["F_C_NM"]+"</option>");
	  }
  }else{
	alert('사용자 인증에 실패했습니다.');
	$("#paymentInfo option").remove();
	$("#paymentInfo").append("<option value=''>결제수단이 없습니다</option>");
  }
  
}

function lpayMemCertIf(){
	//	MEM_M_NUM		맴버스 고객번호 
	//	P_REQ_NM		결제요청자명 
	//	P_REQ_HP_NUM	결제요청자 휴대폰번호 
	document.lpayMemCertIf.P_REQ_NM.value = encodeURI(document.lpayMemCertIf.P_REQ_NM_org.value); 
	
//	document.lpayMemCertIf.returnURL.value ="http://m.lottejtb.com/returnlpayMemCertIf.jsp"
	document.lpayMemCertIf.returnURL.value ="http://mdev.lottejtb.com/returnlpayMemCertIf.jsp"
	document.lpayMemCertIf.action="http://10.141.1.40/jsp/lpay/lpayMemCertIf.faces";
	document.lpayMemCertIf.submit();
}

function returnlpayTranCertIf(data){

	var dlp =  eval("("+data+")");
	
	if(dlp["RESULT_VAL"] == 'S'){
	//alert('?');
	document.dlp.a.value = dlp['a'];
	document.dlp.b.value = dlp['b'];
	document.dlp.c.value = dlp['c'];
	document.dlp.d.value = dlp['d'];
	document.dlp.e.value = dlp['e'];
	document.dlp.f.value = dlp['f'];
	document.dlp.g.value = dlp['g'];
	document.dlp.setKey.value = dlp['setKey'];
	document.dlp.INST_CHO_CD.value = dlp['INST_CHO_CD'];
	document.dlp.SUM_GD_NM_org.value = dlp['SUM_GD_NM'];
	document.dlp.P_REQ_HP_NUM.value = dlp['P_REQ_HP_NUM'];
	document.dlp.P_REQ_NM_org.value = dlp['P_REQ_NM'];
	
	document.dlp.P_REQ_NM.value = encodeURI(document.dlp.P_REQ_NM_org.value); 
    document.dlp.SUM_GD_NM.value = encodeURI(document.dlp.SUM_GD_NM_org.value); 
    
//	document.dlp.returnURL.value ="http://m.lottejtb.com/returnDLP.jsp"
	document.dlp.returnURL.value ="http://mdev.lottejtb.com/returnDLP.jsp"
	document.dlp.action="http://10.141.1.40/jsp/lpay/lpay_json.jsp";
	document.dlp.submit();
	}else{
		alert('인증에 실패했습니다.');
	}
	
}

function lpayTranCertIf(){
	var payment =  jobj["MEMBER_CARD_LIST"][$("#paymentInfo").val()];
    
	//	멤버스 고객번호		MEM_M_NUM
	//	가맹점 거래번호		M_TX_NUM   ?
	//	요약 상품명			SUM_GD_NM
	//	상품금액(총거래금액)	GDS_TOT_AMT
	//	공급금액			GDS_SUP_AMT
	//	부가세				GDS_VAT
	//	봉사료				PSC_AMT
	//	결제요청자명			P_REQ_NM
	//	결제요청자 휴대폰번호	P_REQ_HP_NUM
		
    document.lpayTranCertIf.P_REQ_NM.value = encodeURI(document.lpayTranCertIf.P_REQ_NM_org.value); 	//	결제요청자명
    document.lpayTranCertIf.SUM_GD_NM.value = encodeURI(document.lpayTranCertIf.SUM_GD_NM_org.value); 	//	상품명
    document.lpayTranCertIf.IMONTH_NUM.value = "00"; 	//	할부개월수
    document.lpayTranCertIf.GDS_TOT_AMT.value = $("#totalAmt").text().replace('원','');
    //document.lpayTranCertIf.GDS_TOT_AMT.value = 1004; 	//	상품금액
    document.lpayTranCertIf.GDS_SUP_AMT.value = $("#totalAmt").text().replace('원','');
    //document.lpayTranCertIf.GDS_SUP_AMT.value = 1004; 	//	공급가액
    
    var F_CO_CD =  (payment['F_CO_CD'] += "");
	if(F_CO_CD.length ==1){
		F_CO_CD ='0'+F_CO_CD;
	}
	
    document.lpayTranCertIf.P_M_DIV_CD.value = payment['P_M_DIV_CD'];
    document.lpayTranCertIf.F_CO_CD.value =F_CO_CD;
    document.lpayTranCertIf.F_C_NM_org.value = payment['F_C_NM'];
    document.lpayTranCertIf.P_M_ID.value = payment['P_M_ID'];
    document.lpayTranCertIf.P_M_ANM_org.value = payment['P_M_ANM'];
    document.lpayTranCertIf.P_M_ANM.value = encodeURI(document.lpayTranCertIf.P_M_ANM_org.value);
    document.lpayTranCertIf.F_C_NM.value = encodeURI(document.lpayTranCertIf.F_C_NM_org.value);  
    
    document.lpayTranCertIf.REQ_AMT.value =document.lpayTranCertIf.GDS_TOT_AMT.value;
//    document.lpayTranCertIf.returnURL.value ="http://m.lottejtb.com/returnlpayTranCertIf.jsp"
    document.lpayTranCertIf.returnURL.value ="http://mdev.lottejtb.com/returnlpayTranCertIf.jsp"
    document.lpayTranCertIf.action="http://10.141.1.40/jsp/lpay/lpayTranCertIf.faces";
	document.lpayTranCertIf.submit();
}

function returdlp(data){

	var resdlp =  eval("("+data+")");
	document.lpayAprvIf.PR_TYPE_CD.value = resdlp['PR_TYPE_CD'];
	document.lpayAprvIf.MEM_M_NUM.value = resdlp['MEM_M_NUM'];
	
	document.lpayAprvIf.P_REQ_ID.value = resdlp['P_REQ_ID'];
	document.lpayAprvIf.M_TX_NUM.value = resdlp['M_TX_NUM'];
	
	document.lpayAprvIf.P_REQ_HP_NUM.value = resdlp['P_REQ_HP_NUM'];
	document.lpayAprvIf.P_M_DIV_CD.value = resdlp['P_M_DIV_CD'];
 
	var F_CO_CD =  (resdlp['F_CO_CD'] += "");
	if(F_CO_CD.length ==1){
		F_CO_CD ='0'+F_CO_CD;
	}
	
	document.lpayAprvIf.F_CO_CD.value = F_CO_CD;
	
	document.lpayAprvIf.P_M_ID.value = resdlp['P_M_ID'];
	document.lpayAprvIf.P_M_NUM.value = resdlp['P_M_NUM'];
	document.lpayAprvIf.P_C_MID.value = resdlp['P_C_MID'];
	document.lpayAprvIf.INST_CHO_CD.value = resdlp['INST_CHO_CD'];
	document.lpayAprvIf.IMONTH_NUM.value = resdlp['IMONTH_NUM'];
	document.lpayAprvIf.REQ_AMT.value = resdlp['REQ_AMT'];
	document.lpayAprvIf.OTC_NUM.value = resdlp['OTC_NUM'];
	document.lpayAprvIf.CAVV.value = resdlp['CAVV'];
	document.lpayAprvIf.ECI.value = resdlp['ECI'];
	document.lpayAprvIf.P_M_DIV_CD.value = resdlp['P_M_DIV_CD'];
	document.lpayAprvIf.XID.value = resdlp['XID'];
	document.lpayAprvIf.TR_ID.value = resdlp['TR_ID'];
	document.lpayAprvIf.CARD_YYMM.value = resdlp['CARD_YYMM'];
	 
	document.lpayAprvIf.P_REQ_NM_org.value = resdlp['P_REQ_NM'];
	document.lpayAprvIf.SUM_GD_NM_org.value = resdlp['SUM_GD_NM'];
	document.lpayAprvIf.P_M_ANM_org.value = resdlp['P_M_ANM'];
	document.lpayAprvIf.F_C_NM_org.value = resdlp['F_C_NM'];
	  
	  
	document.lpayAprvIf.P_REQ_NM.value = encodeURI(document.lpayAprvIf.P_REQ_NM_org.value); 
	document.lpayAprvIf.SUM_GD_NM.value = encodeURI(document.lpayAprvIf.SUM_GD_NM_org.value);
	document.lpayAprvIf.P_M_ANM.value = encodeURI(document.lpayAprvIf.P_M_ANM_org.value);
	document.lpayAprvIf.F_C_NM.value = encodeURI(document.lpayAprvIf.F_C_NM_org.value);  
	  
//	document.lpayAprvIf.returnURL.value ="http://m.lottejtb.com/returnlpayAprvIf.jsp"
	document.lpayAprvIf.returnURL.value ="http://mdev.lottejtb.com/returnlpayAprvIf.jsp"
	document.lpayAprvIf.action="http://10.141.1.40/jsp/lpay/lpayAprvIf.faces";
	document.lpayAprvIf.submit();
 
}

function returnlpayAprvIf(data){
	var res =  eval("("+data+")");
	
	if(res["RESULT_VAL"] == 'S'){
		// 성공 DB 저장 시작해야 함
		saveLpayDB();
	}else{
		alert('L.Pay 결제에 실패하였습니다.');
	}
}

function saveLpayDB(){
		//가상계좌T
		// FIT_RSV_NO  로딩시 setting
		document.submitLpayValue.P_M_DIV_CD.value			=	document.lpayTranCertIf.P_M_DIV_CD.value;	//	현금/카드구분
		document.submitLpayValue.BANK_CD_GB.value			=	document.lpayTranCertIf.F_CO_CD.value;		//	은행/카드사코드
		document.submitLpayValue.ACT_PAYMTOR_NM.value		=	document.lpayTranCertIf.P_REQ_NM.value;		//	입금자명

	  	if( "busi" == $(':radio[name="proof"]:checked').val()){
		  	document.submitLpayValue.CASH_RECEIPT_DIVI_GB.value	=	"002";		//	현금영수증구분
			document.submitLpayValue.CORP_NO.value			=	$('input[name="vbankRegNo"]').val();		//	현금영수증발급번호
	  	}else{
		  	document.submitLpayValue.CASH_RECEIPT_DIVI_GB.value	=	"001";		//	현금영수증구분
			document.submitLpayValue.CORP_NO.value			=	$('input[name="vbankRegNo"]').val();		//	현금영수증발급번호
	  	}
		document.submitLpayValue.TID_NO.value				=	document.lpayAprvIf.P_REQ_ID.value;			//	TID(거래번호)
		
		//	카드T
		document.submitLpayValue.CARD_KI_GB.value			=	document.lpayTranCertIf.F_CO_CD.value;		//	카드용 은행/카드사코드
		document.submitLpayValue.CARD_NO.value				=	document.lpayAprvIf.P_M_NUM.value;			//	카드번호
		document.submitLpayValue.CARD_INSTALLMN_MN.value	=	document.lpayTranCertIf.IMONTH_NUM.value;	//	할부개월수
		document.submitLpayValue.CARD_APPROVE_NO.value		=	document.lpayAprvIf.P_REQ_ID.value;			//	TID(거래번호)
		
		document.submitLpayValue.TOTALAMT.value				=	document.lpayTranCertIf.REQ_AMT.value;		//	결제금액

	  	var merchantDataVal	=	"";
		
		merchantDataVal	=	$('input[name="P_AMT"]').val();									//	상품가격(복합결제금액 제외 카드결제금액 또는 가상계좌금액)
	  	merchantDataVal	=	merchantDataVal + "	" +  $('input[name="startDay"]').val();		//	여행시작일자
	  	merchantDataVal	=	merchantDataVal + "	" + $('input[name="cardNo"]').val();		//	LPOINT 카드번호
	  	merchantDataVal	=	merchantDataVal + "	" + $('input[name="wpw"]').val();			//	LPOINT 패스워드
	  	merchantDataVal	=	merchantDataVal + "	" +	$('input[name="lottePoint"]').val();	//	사용포인트
	  	merchantDataVal	=	merchantDataVal + "	" + $('input[name="payAmt"]').val();		//	현금결제금액	(복합결제의경우)
	  	if( "busi" == proofCheck){
		  	merchantDataVal	=	merchantDataVal + "	" +  "1";								//	현금영수증타입(0:소득공제(소비자용), 1:지출증빙(사업자용))
	  	}else{
		  	merchantDataVal	=	merchantDataVal + "	" +  "0";								//	현금영수증타입(0:소득공제(소비자용), 1:지출증빙(사업자용))
	  	}
	  	merchantDataVal	=	merchantDataVal + "	" +  $('input[name="vbankRegNo"]').val();	//	현금영수증인증번호(핸드폰번호, 사업자등록번호)
	  	merchantDataVal	=	merchantDataVal + "	" +  $('input[name="giftNo"]').val();		//	상품권번호
	  	merchantDataVal	=	merchantDataVal + "	" +  $('input[name="giftNoAmt"]').val();	//	상품권금액
	  	merchantDataVal	=	merchantDataVal + "	" +  $('input[name="phoneNumber"]').val();	//	구매자 전화번호
	  	merchantDataVal	=	merchantDataVal + "	" +  $('input[name="userEmail"]').val();	//	구매자 이메일
	  	merchantDataVal	=	merchantDataVal + "	" +  encodeURIComponent($('input[name="goodname"]').val());	//	상품명
	  	merchantDataVal	=	merchantDataVal + "	" +  $("select[name=bankforvbank]").val();	//	입금은행코드
	  	merchantDataVal	=	merchantDataVal + "	" + $('input[name="resCd"]').val();			//	예약번호
	  	if($('input[name="paymentMethod"]').val() == "Card"){
	  		merchantDataVal	=	merchantDataVal + "	" + "Card";		//	결제구분
	  	}else{
	  		merchantDataVal	=	merchantDataVal + "	" + "VBank";	//	결제구분
	  	}
	  	submitform1.find("#P_NOTI2").val(encodeURIComponent(merchantDataVal));			

//		document.submitLpayValue.action = "http://m.lottejtb.com/free/account/paymentLpayReturn.do";
		document.submitLpayValue.action = "http://mdev.lottejtb.com/free/account/paymentLpayReturn.do";
		document.submitLpayValue.submit();
}


function regDlp(){
	var check_form = $('form[ft-att="check"]');
	
	if( check_form.find("#MEM_M_NUM").val() == ""	){
		alert("로그인을 하여 주십시요.");
		return;
	}
	
	$('.paylist_chkbox2 #card').click();


	document.dlpcard.returnURL.value ="http://10.141.1.63:38180/returnRegDlp.jsp";
	document.dlpcard.action="http://10.141.1.40/jsp/lpay/lpayRegPayment.faces";
	document.dlpcard.submit();
	
}

function returnRegDlp(data){

 	if(data == 'S'){
//	     alert('성공했습니다.');
	}else{
		alert('L.pay연동에 실패하였습니다.');
	}
}

</script>
<!-- ----------------------- L.Pay용 script end ---------------------------- -->
<!-- ----------------------- 상품권을 위한 Script ---------------------------- -->
<script>
function schGift(id){
	if(document.getElementById(id).value == "상품권번호입력" || document.getElementById(id).value == ""){
		setAlert("상품권번호를 입력해주세요.");
		return false;
	}else{
		chkGiftNumberCertIf(id, '1');
		document.getElementById('giftNoAmt').value = 0;
	}
}

function returnGiftNumberCertIf(data){
   var gift =  eval("("+data+")");

   if(gift.COUPON["RETCODE"] == 'S'){
	   if(gift.COUPON["REALAMT"] < 0){
		   document.getElementById('giftNoAmt').value = "100";
	       alert('쿠폰번호를 확인해주세요.');
		   return;
	   }
	   document.getElementById('giftNoAmt').value = gift.COUPON["REALAMT"];
   }else{
       alert('쿠폰번호를 확인해주세요.');
   }
}

function chkGiftNumberCertIf(id, type){
	document.giftNumberCertIf.GIFTNO.value = document.getElementById(id).value;
	document.giftNumberCertIf.RETURNDATA.value = type;
	document.giftNumberCertIf.returnURL.value ="http://m.lottejtb.com/returnGiftNumberCertIf.jsp"
	document.giftNumberCertIf.action="http://10.141.1.40/jsp/gift/giftNumberCertIf.faces";
	document.giftNumberCertIf.submit();
}
</script>

</head>
<body>

	<!--content-->
	<div role="main" class="ui-content contentWrap freesearch">
		<div class="navstitle freeback">
			결제하기<!-- a href="javascript:history.back(-1);">뒤로</a -->
		</div>
		<div class="free_reserve collapse fr_paybox">
			<div id="divName">
				
			</div>
			<!-- 예약상품정보 및 결제상품정보-->
			<%@ include file="/WEB-INF/jsp/account/inc_rsv_info.jsp" %>
			<!-- 예약상품정보 및 결제상품정보-->			
			<!-- 마일리지 버튼 -->
			<%-- <div class="btn_one air_tbtn addbtn2">
				<button class="layerOpener purple2" data-role="none" data-url="/pop/pop_mileage.do?seqNo=${seqNo}" data-ctn="full" data-ok="yes">마일리지 등록</button>
			</div> --%>
			<!-- 
			<p class="obj_title2 obj_bg_wht mt7"><span class="ico_paym">입금내역</span></p>
			<table class="ft_table2 ft_th_tl ft_tb_tr">
				<colgroup>
					<col style="width:30%" />
					<col style="width:70%" />
				</colgroup>
				<tbody>
				<tr>
					<th>입금날짜</th>
					<td>-</td>
				</tr>
				<tr>
					<th>결제수단</th>
					<td>-</td>
				</tr>
				<tr>
					<th>입금상태</th>
					<td>-</td>
				</tr>
				<tr>
					<th>금액</th>
					<td>-</td>
				</tr>
				<tr>
					<th>영수증</th>
					<td>-</td>
				</tr>
				<tr>
					<th>현금영수증</th>
					<td></td>
				</tr>
				<tr class="tb_purple">
					<th class="white2">입금총액</th>
					<td>0원</td>
				</tr>
				</tbody>
			</table>
			 -->
			<!-- 여권정보등록 -->
			<div id="passport_div">
				<%@ include file="/WEB-INF/jsp/account/inc_passport_info.jsp" %>
			</div>
			<!-- 여권정보등록 -->
			<!-- 목적지/거주지 정보 등록 및 변경 -->
			<div id="arr_info_div">
				<%@ include file="/WEB-INF/jsp/account/inc_arr_info.jsp" %>
			</div>
			<!-- 목적지/거주지 정보 등록 및 변경 -->
			<!-- 비자정보 등록 및 변경 -->
			<%// @ include file="/WEB-INF/jsp/account/inc_visa_info.jsp" %>
			<!-- 비자정보 등록 및 변경 -->
			<!-- 현지 연락처 등록 및 변경 -->
			<div id="contact_info_div">
				<%@ include file="/WEB-INF/jsp/account/inc_contact_info.jsp" %>
			</div>
			<!-- 현지 연락처 등록 및 변경 -->

			<!-- 결제하기 -->
			<p class="obj_title2 obj_bg_wht mt7">
				<span class="ico_paym">결제하기</span>
			</p>
			<ul class="payinfo_ctnbox">
				<li id="promoLi">
				</li>
				<li>
					<div>
						<em id="useablepoint">LPOINT (0점)</em> <em class="f_red">&nbsp;</em>
						<button class="payc_btn payc_view" type="button" data-role="none">본인확인</button>
						<button class="payc_btn payc_use" type="button" data-role="none" onClick="javascript:fn_lpointApply();">적용</button>
					</div>
					<div class="pc_lpoint_div1">
						<button class="layerOpener" data-role="none" data-url="/pop/lpointPop.do" data-ctn="full" data-ok="yes">본인확인</button>
<!--  						<button type="button" data-role="none" id="applyLpoint">본인확인</button> -->
						<input type="text" data-role="none" class="lpoint_text"  id="lpoint" name="lottePoint"	value="0" />P
						<p class="chkbox">
							<span><input id="chk_ck30" type="checkbox" data-role="none"></span> <label for="chk_ck30">전체사용</label>
						</p>
					</div>
				</li>
				<li>
					<div>
						<em>롯데제이티비 여행상품권</em> <em class="f_red">&nbsp;</em>
						<button class="payc_btn payc_view" type="button" data-role="none">조회</button>
						<button class="payc_btn payc_use" type="button" data-role="none">적용</button>
					</div>
					<div class="pc_lpoint_div2">
						<input type="hidden" data-role="none" class="pro_price" id="giftNoAmt" name="giftNoAmt" value="0" /> 
						<input type="text" data-role="none" placeholder="상품권 번호 입력"  id="giftNo" name="giftNo" value="" />
						<button type="button" data-role="none" id="schGift">조회</button>
					</div>
				</li>
			</ul>
			<!-- 결제 선택 -->
			<ul class="paylist_chkbox2">
				<li><button type="button" data-role="none" id="card">신용카드</button></li>
				<li><button type="button" data-role="none" id="virtual">가상계좌</button></li>
				<li><button type="button" data-role="none" id="dual">신용카드 +<br/> 무통장입금</button></li>
				<li><button type="button" data-role="none" id="lpay" >Lpay<br>간편결제</button></li>
			</ul>
			<!-- 결제 선택 : 신용카드, 무통장입금 -->
			<dl class="caronline_bankinfo obj_none">
				<dt>신용카드 + 무통장입금</dt>
				<dd>
					<table class="ft_table2 ft_th_tl">
						<colgroup>
							<col style="width: 30%" />
							<col style="width: 70%" />
						</colgroup>
						<tr>
							<th>카드결제금액<em class="f_red">*</em></th>
							<td><input type="text" data-role="none" id="cardPayAmt"/> 원
								<p class="ft_text_guide1">(고객님께서 결제하실 금액을 입력해 주세요)</p></td>
						</tr>
						<tr>
							<th>현금결제금액<em class="f_red">*</em></th>
							<td><input type="text" data-role="none" id="payAmt" name="payAmt" value = "0"/> 원</td>
						</tr>
						<tr>
							<th>입금은행<em class="f_red">*</em></th>
							<td>
								<select name="bankforvbank" id="bankforvbank" class="fr_select" data-role="none">
									<option value="">선택해주세요</option>
									<option value="11"> NH농협은행</option>
									<option value="04"> KB국민은행</option>
									<option value="88"> 신한은행</option>
									<option value="20"> 우리은행</option>
									<option value="03"> 기업은행</option>
									<option value="81"> KEB 하나은행</option>
									<option value="31"> 대구은행</option>
									<option value="32"> 부산은행</option>
									<option value="71"> 우체국</option>
									<option value="34"> 광주은행</option>
									<option value="23"> SC은행</option>
									<option value="39"> 경남은행</option>
									<option value="27"> 한국씨티은행</option>
									<option value="07"> 수협중앙회</option>
								</select>	
							</td>
						</tr>
					</table>
				</dd>
			</dl>
			<!-- 결제 선택 : 무이자 할부정보 -->
			<dl class="toggle_acdon card_bankinfo obj_none">
				<dt>무이자 할부정보</dt>
				<dd>
					<p>하나카드 (2~5개월)</p>
					<p>비씨카드 (2~5개월)</p>
					<p>씨티카드 (2~5개월)</p>
					<p>삼성카드 (2~5개월)</p>
					<p>현대카드 (2~5개월)</p>
					<p>농협카드 (2~5개월)</p>
					<p>신한카드 (2~5개월)</p>
					<p>국민카드 (2~5개월)</p>
					<p>롯데카드 (2~5개월)</p>
				</dd>
			</dl>
			<!-- 결제 선택 : 증빙거래 영수증 -->
			<dl class="online_bankinfo obj_none">
				<dt>증빙거래 영수증</dt>
				<dd>
					<p class="chkbox">
						<span><input id="chk_ck20" type="checkbox" data-role="none"></span>
						<label for="chk_ck20">현금영수증 신청 
							<em>(현금영수증 미 신청 시 자진 발급됩니다)</em><br> 
							<em> * 상품권/무통장입금/실시간 계좌이체로 이용한 금액 만 현금영수증 발행이 가능합니다.</em>
						</label>
					</p>
				</dd>
				<dd class="ob_num_box1">
					<span class="radioboxs"><input type="radio" name="proof" id="proof1" data-role="none" value="indi"></span> 
					<label for="radio1">소득공제용(개인용)
						<em>휴대폰 번호 또는 현금영수증 카드번호</em>
					</label>
					<p>
						<input type="text" data-role="none" id="cellCashCardNo1"/>
					</p>
				</dd>
				<dd class="ob_num_box2">
					<span class="radioboxs"><input type="radio" name="proof" id="proof2" data-role="none" value="busi"></span> 
					<label for="radio2">지출증빙용(사업자용) 
						<em>사업자 등록번호</em>
					</label>
					<p>
						<input type="text" data-role="none" id="bizRegNo1"/> - <input type="text"
							data-role="none" id="bizRegNo2"/> - <input type="text" data-role="none" id="bizRegNo3"/>
					</p>
				</dd>
			</dl>
			<!-- 결제 선택 : L pay -->
			<dl class="toggle_acdon lpay_bankinfo obj_none">
			<dt>
					L.pay에 등록된 카드/계좌가 없습니다.
					<button type="button" data-role="none" onClick="javascript:regDlp();">카드등록</button>
				</dt> 
				<dt>L.pay 간편결제 서비스 이용안내</dt>
				<dd>
					<div class="lpay_text_box">
						<div>
							<p>비밀번호 없이 한 번에 결제 OK!</p>
							최초 1회 결제 후 결제 비밀번호 입력없이 바로 결제 가능한 “<span>빠른결제</span>”서비스 입니다.
						</div>
						<ul class="dotlist1">
							<li>카드사/금융사별 정책에 따라 고액 결제 시 추가 인증이 필요합니다.</li>
							<li>USIM이 없는 휴대폰에서는 사용하실 수 없습니다.</li>
						</ul>
					</div>
				</dd>
			</dl>
			<ul class="lpay_bank_sel obj_none">
				<li>
				<select id="paymentInfo" name="paymentInfo" class="fr_select" data-role="none">
				</select>
				
				<!-- 	<select name="" class="fr_select" data-role="none">
						<option value="">카드선택</option>
						<option value="롯데카드">롯데카드</option>
						<option value="국민카드">국민카드</option>
				 	</select> -->
				
				</li>
				<li>
				<!-- 
				<select name="" class="fr_select" data-role="none">
						<option value="">일시불</option>
						<option value=".......">.......</option>
						<option value=".......">.......</option>
				</select>
				 
				<a href="javascript:lpayTranCertIf();">거래인증</a>		
				-->		
				</li>
			</ul>
			<!-- 최종결제 정보 -->
			<ul class="pop_chk_list payinfolist">
				<li class="pop_paytext1">
					<!-- <p>항공 <span id="final_airAmt"></span></p> -->
					<p>호텔 <span id="final_hotelAmt"></span></p>
					<!-- <p>렌터카(후불) <span id="final_rentAmt"></span></p> -->
					<div id="promoDiv"></div>
					<!-- <p class="ppred">프로모션 <span>0원</span></p> -->
					<p class="ppred" id="lpointAmt">L.Point<span id="lpointAmtText">0원</span></p>
					<p class="ppred" id="giftAmt">상품권<span id="giftAmtText">0원</span></p>
				</li>
			</ul>
			<p class="pop_avtitle3">
				총 결제예정금액 <span id="totalAmt">0원</span>
			</p>
			<div class="white2">
				<table class="ft_table2 ft_tb_tl">
					<colgroup>
						<col style="width: 25%">
						<col style="width: 75%">
					</colgroup>
					<tbody>
						<tr>
							<th>이메일<em class="f_red">*</em></th>
							<td><input type="text" data-role="none"	id="userEmail" name="userEmail" placeholder="test@test.com" /></td>
						</tr>
						<tr>
							<th>이동전화<em class="f_red">*</em></th>
							<td><input type="text" data-role="none" id="phoneNumber" name="phoneNumber" placeholder="" /></td>
						</tr>
					</tbody>
				</table>
			</div>
			<div class="obj_bg_wht payend_sel_box">
				<p class="chkbox">
					<span><input id="chk_ck10" type="checkbox" data-role="none"></span>
					<label for="chk_ck10">주문하실 상품의 상품명, 가격, 유의사항을 확인하였으며, 구매에 동의합니다.</label>
				</p>
			</div>
			<!-- 버튼 -->
			<div class="btn_one air_tbtn addbtn2">
				<button class="purple2" data-role="none" id="btnPayment">결제하기</button>
			</div>
			<div class="btn_one air_tbtn">
				<button class="white2" data-role="none" onclick="pageBack();">취소하기</button>
			</div>
		</div>
		<!--bottom-->
		<script src="/resources/common/bottom.js"></script>
		<!--bottom-->
	</div>
	<!--//content-->
	
	<input type="hidden" name="paymentMethod" id="paymentMethod" value="" >
	
	<form id="paymentReqForm" name="paymentReqForm" method="POST">
		<!-- ***** 필 수 ***** -->
		<input type="hidden" name="version" id = "version" value="" >
		<input type="hidden" name="mid" id = "mid" value="" >
		<input type="hidden" name="goodname" id = "goodname" value="" >
		<input type="hidden" name="oid" id = "oid" value="" > <!-- 필수 -->
		<input type="hidden" name="price" id = "price" value="" > <!-- 필수 -->
		<input type="hidden" name="currency" id = "currency" value="" >
		<input type="hidden" name="buyername" id = "buyername" value="" >
		<input type="hidden" name="buyertel" id = "buyertel" value="" >
		<input type="hidden" name="buyeremail" id = "buyeremail" value="" >
		<input type="hidden" name="timestamp" id = "timestamp" value="" > <!-- 필수 -->
		<input type="hidden" name="signature" id = "signature" value="" >
		<input type="hidden" name="returnUrl" id = "returnUrl" value="" >
		<input type="hidden" name="mKey" id = "mKey" value="" >
								
		<!-- ***** 기본 옵션 ***** -->
		<input type="hidden" name="gopaymethod" id = "gopaymethod" value="" > <!-- 결제 수단 선택 -->
		<input type="hidden" name="offerPeriod" id = "offerPeriod" value="" > <!-- 제공기간 -->
<!-- 		<input type="hidden" name="acceptmethod" value="CARDPOINT:HPP(1):no_receipt:va_receipt:vbanknoreg(0):below1000" > acceptmethod -->

		<input type="hidden" name="acceptmethod" id="acceptmethod" value="" >

		<!-- ***** 표시 옵션 ***** -->
		<input type="hidden" name="languageView" id = "languageView" value="" > <!-- 초기 표시 언어 -->
		<input type="hidden" name="charset" id = "charset" value="" > <!-- 리턴 인코딩: [UTF-8|EUC-KR] (default:UTF-8) -->
		<input type="hidden" name="payViewType" id = "payViewType" value="" > <!-- 결제창 표시방법: [overlay] (default:overlay) -->
		<input type="hidden" name="closeUrl" id = "closeUrl" value="" > <!-- payViewType='overlay','popup'시 취소버튼 클릭시 창닥기 처리 URL(가맹점에 맞게 설정) close.jsp 샘플사용(생략가능, 미설정시 사용자에 의해 취소 버튼 클릭시 인증결과 페이지로 취소 결과를 보냅니다.) -->	
		<input type="hidden" name="popupUrl" id = "popupUrl" value="" > <!-- payViewType='popup'시 팝업을 띄울수 있도록 처리해주는 URL(가맹점에 맞게 설정) popup.jsp 샘플사용(생략가능,payViewType='popup'으로 사용시에는 반드시 설정) -->
			
		<!-- ***** 결제 수단별 옵션 ***** -->
		<!-- 카드(간편결제도 사용) -->
		<input type="hidden" name="quotabase" id = "quotabase" value="" > <!-- 할부 개월 설정 -->
		<input type="hidden" name="ini_onlycardcode" id = "ini_onlycardcode" value="" > <!-- 중복 카드 코드 -->
		<input type="hidden" name="ini_cardcode" id = "ini_cardcode" value="" > <!-- 카드 코드 -->
		<input type="hidden" name="ansim_quota" id = "ansim_quota" value="" > <!-- 할부 선택 -->
		
		<!-- 가상계좌 -->		
		<input type="hidden" name="vbankRegNo" id = "vbankRegNo" value="" > <!-- 주민번호 설정 기능: 13자리(주민번호),10자리(사업자번호),미입력시(화면에서입력가능) -->
		
		<!-- 상품권관련 -->
		<input type="hidden" name="giftCard" id = "giftCard" value="" > <!-- 상품권번호 -->
		<input type="hidden" name="giftCardAmt" id = "giftCardAmt" value="" > <!-- 상품권금액 -->
		
		<!-- LPOINT관련 -->
		<input type="hidden" name="cardNo" id = "cardNo" value="" > <!-- LPOINT 카드번호 -->
		<input type="hidden" name="wpw" id = "wpw" value="" > <!-- LPOINT 패스워드 -->
		
		<!-- 상품관련 -->
		<input type="hidden" name="startDay" id = "startDay" value="" > <!-- 출발일자 -->
		<input type="hidden" name="resCd" id = "resCd" value="${rsvResult.getFitRsvNo()}" > <!-- 예약번호 -->

		<!-- ***** 추가옵션 ***** -->
		<!-- 	
					goodsPrice		=	splitParam[0]; 		//	상품가격
					rescd			=	splitParam[1]; 		//	예약번호
					cardNo			=	splitParam[2]; 		//	LPoint카드번호
					wpw				=	splitParam[3]; 		//	LPoint패스워드
					lottePoint		=	splitParam[4]; 		//	사용포인트
					cashPayAmt		=	splitParam[5];		//	현금결제금액	(복합결제의경우)
					cashType		=	splitParam[6];		//	현금영수증타입(0:소득공제(소비자용), 1:지출증빙(사업자용))
					cashReceipts	=	splitParam[7];		//	현금영수증인증번호(핸드폰번호, 사업자등록번호)	
					giftCard		=	splitParam[8]; 		//	상품권번호	 
					giftCardAmt		=	splitParam[9]; 		//	상품권금액	 
					buyerTel		=	splitParam[10]; 	//	구매자 전화번호
					buyerEmail		=	splitParam[11]; 	//	구매자 이메일
					goodName		=	splitParam[12]; 	//	상품명
					vcdbank			=	splitParam[13]; 	//	입금은행코드
					startDay		=	splitParam[14]; 	//	여행시작일자
				
		<input type="hidden" name="merchantData" value="1010	P170213-0001	8710400970377574	1q2w3e	10	0					20170607" > 신용카드
		<input type="hidden" name="merchantData" value="1010	P170213-0002	8710400970377574	1q2w3e	10	0	1	01027249613			20170607" > 가상계좌
		<input type="hidden" name="merchantData" value="1010	P170213-0003	8710400970377574	1q2w3e	10	0					20170607" > 실시간계좌이체
		<input type="hidden" name="merchantData" value="1530	P170213-0001	8710400970377574	1q2w3e	10	500	1	01027249613	11111	20	20170607" > 복합결제
		-->
		<input type="hidden" name="merchantData" value="" > <!--  가맹점 관리데이터(2000byte) 인증결과 리턴시 함께 전달됨 -->
	</form>
	<!-- //결제 요청 폼  -->
<!-- ----------------------- L.Pay용 iframe & form start ---------------------------- -->
<iframe id="sub" name="sub"  width="1000" height="1000"  >
</iframe>

<form id="lpayMemCertIf" name="lpayMemCertIf"  method="post" target="sub" ft-att="check">
	결제요청타입코드(PR_TYPE_CD) : <input type="text" id="PR_TYPE_CD" name="PR_TYPE_CD" value="6000001"/>
	<br/>
	멤버스 고객번호(MEM_M_NUM):<input type="text" id="MEM_M_NUM" name="MEM_M_NUM" value="${cno}"/>
	<br/>
	결제요청자명(P_REQ_NM) : <input type="text" id="P_REQ_NM_org" name="P_REQ_NM_org" value="${knm}"/>
	<br/>
	결제요청자 휴대폰번호(P_REQ_HP_NUM) : <input type="text" id="P_REQ_HP_NUM" name="P_REQ_HP_NUM" value="${telno}"/>
	<br/>
	P_REQ_NM(PAYOR_HP_NUM) :<input type="text" id="PAYOR_HP_NUM" name="PAYOR_HP_NUM" value=""/>
	returnURL : <input type="text" id="returnURL" name="returnURL" value=""/>
	P_REQ_NM : <input type="text" id="P_REQ_NM" name="P_REQ_NM" value=""/>
	<br/>
</form>

<form id="lpayTranCertIf" name="lpayTranCertIf"  method="post" target="sub">
	결제요청자 휴대폰번호(PR_TYPE_CD) : <input type="text" id="PR_TYPE_CD" name="PR_TYPE_CD" value="6000001"/>
	<br/>
	가맹점 거래번호(M_TX_NUM) : <input type="text" id="M_TX_NUM" name="M_TX_NUM" value="${M_TX_NUM}"/>
	<br/>
	멤버스 고객번호(MEM_M_NUM) : <input type="text" id="MEM_M_NUM" name="MEM_M_NUM" value="${cno}"/>
	<br/>
	요약 상품명(SUM_GD_NM) : <input type="text" id="SUM_GD_NM_org" name="SUM_GD_NM_org" value="test상품"/>
	<input type="hidden" id="SUM_GD_NM" name="SUM_GD_NM" value="test상품"/>
	<br/>
	상품금액(총거래금액)(GDS_TOT_AMT) : <input type="text" id="GDS_TOT_AMT" name="GDS_TOT_AMT" value="0"/>
	<br/>
	공급금액(GDS_SUP_AMT) : <input type="text" id="GDS_SUP_AMT" name="GDS_SUP_AMT" value="0"/>
	<br/>
	부가세(GDS_VAT) : <input type="text" id="GDS_VAT" name="GDS_VAT" value="0"/>
	<br/>
	봉사료(PSC_AMT) : <input type="text" id="PSC_AMT" name="PSC_AMT" value=""/>
	<br/>
	<br/>
	결제요청자명(P_REQ_NM) : <input type="text" id="P_REQ_NM_org" name="P_REQ_NM_org" value="${knm}"/>
	<input type="hidden" id="P_REQ_NM" name="P_REQ_NM" value=""/>
	<br/>
	결제요청자 휴대폰번호(P_REQ_HP_NUM) : <input type="text" id="P_REQ_HP_NUM" name="P_REQ_HP_NUM" value="${telno}"/>
	
	<br/>P_M_DIV_CD:<input type="text" id="P_M_DIV_CD" name="P_M_DIV_CD" value=""/>
	<br/>F_CO_CD:<input type="text" id="F_CO_CD" name="F_CO_CD" value=""/>
	<br/>F_C_NM:<input type="text" id="F_C_NM_org" name="F_C_NM_org" value=""/>
	<input type="hidden" id="F_C_NM" name="F_C_NM" value=""/>
	<br/>P_M_ID:<input type="text" id="P_M_ID" name="P_M_ID" value=""/>
	<br/>P_M_ANM:<input type="text" id="P_M_ANM_org" name="P_M_ANM_org" value=""/>
	<input type="hidden" id="P_M_ANM" name="P_M_ANM" value=""/>
	<br/>INST_CHO_CD:<input type="text" id="INST_CHO_CD" name="INST_CHO_CD" value="6100001"/>
	<br/>IMONTH_NUM:<input type="text" id="IMONTH_NUM" name="IMONTH_NUM" value="00"/>
	<br/>REQ_AMT:<input type="text" id="REQ_AMT" name="REQ_AMT" value=""/>
	<input type="hidden" id="returnURL" name="returnURL" value=""/>
</form>
	
<form id="dlp" name="dlp"  method="post" target="sub">
	<br/>a:<input type="text" id="a" name="a" value=""/>
	<br/>b:<input type="text" id="b" name="b" value=""/>
	<br/>c:<input type="text" id="c" name="c" value=""/>
	<br/>d:<input type="text" id="d" name="d" value=""/>
	<br/>e:<input type="text" id="e" name="e" value=""/>
	<br/>f:<input type="text" id="f" name="f" value=""/>
	<br/>g:<input type="text" id="g" name="g" value=""/>
	<br/>setKey:<input type="text" id="setKey" name="setKey" value=""/>
	<br/>INST_CHO_CD:<input type="text" id="INST_CHO_CD" name="INST_CHO_CD" value=""/>
	<br/>P_REQ_NM:<input type="text" id="P_REQ_NM_org" name="P_REQ_NM_org" value=""/>
	<input type="hidden" id="P_REQ_NM" name="P_REQ_NM" value=""/>
	<br/>P_REQ_HP_NUM:<input type="text" id="P_REQ_HP_NUM" name="P_REQ_HP_NUM" value=""/>
	<br/>SUM_GD_NM:<input type="text" id="SUM_GD_NM_org" name="SUM_GD_NM_org" value=""/>
	<input type="hidden" id="SUM_GD_NM" name="SUM_GD_NM" value=""/>
	<input type="hidden" id="returnURL" name="returnURL" value=""/>
</form>
	
<form id="lpayAprvIf" name="lpayAprvIf"  method="post" target="sub">
<br/>PR_TYPE_CD:<input type="text" id="PR_TYPE_CD" name="PR_TYPE_CD" value=""/>
<br/>MEM_M_NUM:<input type="text" id="MEM_M_NUM" name="MEM_M_NUM" value=""/>
<br/>SUM_GD_NM:<input type="text" id="SUM_GD_NM_org" name="SUM_GD_NM_org" value=""/>
	<input type="hidden" id="SUM_GD_NM" name="SUM_GD_NM" value=""/>
<br/>P_REQ_ID:<input type="text" id="P_REQ_ID" name="P_REQ_ID" value=""/>
<br/>M_TX_NUM:<input type="text" id="M_TX_NUM" name="M_TX_NUM" value=""/>
<br/>P_REQ_NM: <input type="text" id="P_REQ_NM_org" name="P_REQ_NM_org" value=""/>
	<input type="hidden" id="P_REQ_NM" name="P_REQ_NM" value=""/>
<br/>P_REQ_HP_NUM:<input type="text" id="P_REQ_HP_NUM" name="P_REQ_HP_NUM" value=""/>
<br/>P_C_MID:<input type="text" id="P_C_MID" name="P_C_MID" value=""/>
<br/>P_M_DIV_CD:<input type="text" id="P_M_DIV_CD" name="P_M_DIV_CD" value=""/>
<br/>F_CO_CD:<input type="text" id="F_CO_CD" name="F_CO_CD" value=""/>
<br/>F_C_NM:<input type="text" id="F_C_NM_org" name="F_C_NM_org" value=""/>
<input type="hidden" id="F_C_NM" name="F_C_NM" value=""/>
<br/>P_M_ID:<input type="text" id="P_M_ID" name="P_M_ID" value=""/>
<br/>P_M_NUM:<input type="text" id="P_M_NUM" name="P_M_NUM" value=""/>
<br/>P_M_ANM:<input type="text" id="P_M_ANM_org" name="P_M_ANM_org" value=""/>
<input type="hidden" id="P_M_ANM" name="P_M_ANM" value=""/>
<br/>INST_CHO_CD:<input type="text" id="INST_CHO_CD" name="INST_CHO_CD" value=""/>
<br/>IMONTH_NUM:<input type="text" id="IMONTH_NUM" name="IMONTH_NUM" value=""/>
<br/>REQ_AMT:<input type="text" id="REQ_AMT" name="REQ_AMT" value=""/>
<br/>OTC_NUM:<input type="text" id="OTC_NUM" name="OTC_NUM" value=""/>
<br/>CAVV:<input type="text" id="CAVV" name="CAVV" value=""/>
<br/>ECI:<input type="text" id="ECI" name="ECI" value=""/>
<br/>XID:<input type="text" id="XID" name="XID" value=""/>
<br/>TR_ID:<input type="text" id="TR_ID" name="TR_ID" value=""/>
<br/>CARD_YYMM:<input type="text" id="CARD_YYMM" name="CARD_YYMM" value=""/>
<input type="hidden" id="returnURL" name="returnURL" value=""/>
</form>

<form id="submitLpayValue" name="submitLpayValue"  method="post">
<input type="hidden" id="FIT_RSV_NO" name="FIT_RSV_NO" value="${rsvResult.getFitRsvNo()}"/>	<!-- 예약번호 -->
<input type="hidden" id="P_M_DIV_CD" name="P_M_DIV_CD" value=""/>	<!-- 현금/카드구분 -->
<input type="hidden" id="BANK_CD_GB" name="BANK_CD_GB" value=""/>	<!-- 은행/카드사코드 -->
<input type="hidden" id="ACT_PAYMTOR_NM" name="ACT_PAYMTOR_NM" value=""/>	<!-- 입금자명 -->
<input type="hidden" id="CASH_RECEIPT_DIVI_GB" name="CASH_RECEIPT_DIVI_GB" value=""/>	<!-- 현금영수증구분 -->
<input type="hidden" id="CORP_NO" name="CORP_NO" value=""/>	<!-- 현금영수증발급번호 -->
<input type="hidden" id="TID_NO" name="TID_NO" value=""/>	<!-- TID(거래번호) -->
<input type="hidden" id="CARD_KI_GB" name="CARD_KI_GB" value=""/>	<!-- 카드용 은행/카드사코드-->
<input type="hidden" id="CARD_NO" name="CARD_NO" value=""/>	<!-- 카드번호 -->
<input type="hidden" id="CARD_INSTALLMN_MN" name="CARD_INSTALLMN_MN" value=""/>	<!--할부개월수 -->
<input type="hidden" id="CARD_APPROVE_NO" name="CARD_APPROVE_NO" value=""/>	<!-- TID(거래번호) -->
<input type="hidden" id="TOTALAMT" name="TOTALAMT" value=""/>	<!-- 결제금액 -->
</form>

<form id="dlpcard" name="dlpcard"  method="post" target="sub">
	<br/>c:<input type="text" id="c" name="c" value="${cno}"/>
	<input type="hidden" id="returnURL" name="returnURL" value=""/>상품명
</form>
<!-- ----------------------- L.Pay용 iframe & form end ---------------------------- -->

<meta http-equiv="Content-Type" content="text/html;charset=euc-kr"/>
<!-- 
1트렌  가상계좌 성공
-->
<form id="form1" name="form1" method="post" accept-charset="euc-kr" action="https://mobile.inicis.com/smart/vbank/" ft-att="form1">
<input type="hidden" name="P_MID" id="P_MID" value="" />
<input type="hidden" name="P_OID" id="P_OID" value="" />
<input type="hidden" name="P_AMT" id="P_AMT" value="" />
<input type="hidden" name="P_UNAME" id="P_UNAME" value="" />
<input type="hidden" name="P_GOODS" id="P_GOODS" value="" />
<input type="hidden" name="P_NEXT_URL" id="P_NEXT_URL" value="http://mdev.lottejtb.com/free/account/paymentReturn.do" />
<input type="hidden" name="P_TAX" id="P_TAX" value="0" />
<input type="hidden" name="P_RESERVED" id="P_RESERVED" value="auth_charset=utf8" />

<input type="hidden" name="P_NOTI" id="P_NOTI" value="" />
<input type="hidden" name="P_MOBILE" id="P_MOBILE" value="" />
<input type="hidden" name="P_EMAIL" id="P_EMAIL" value="" />
<input type="button" onclick="formSubmit();" >가상계좌</>
</form>	

<!-- 2트렌 신용카드-->
<form id="form3" name="form3" method="post" accept-charset="euc-kr" action="https://mobile.inicis.com/smart/wcard/" ft-att="form3">
<input type="hidden" name="P_MID" id="P_MID" value="" />
<input type="hidden" name="P_OID" id="P_OID" value="" />
<input type="hidden" name="P_AMT" id="P_AMT" value="" />
<input type="hidden" name="P_UNAME" id="P_UNAME" value="" />
<input type="hidden" name="P_GOODS" id="P_GOODS" value="" />
<input type="hidden" name="P_NEXT_URL" id="P_NEXT_URL" value="http://mdev.lottejtb.com/free/account/paymentReturn.do" />
<input type="hidden" name="P_NOTI_URL" id="P_NOTI_URL" value="http://mdev.lottejtb.com/free/account/paymentReturn.do" />
<input type="hidden" name="P_RETURN_URL" id="P_RETURN_URL" value="http://mdev.lottejtb.com/free/account/paymentReturn.do" />
<input type="hidden" name="P_TAX" id="P_TAX" value="0" />
<input type="hidden" name="P_RESERVED" id="P_RESERVED" value="twotrs_isp=Y&block_isp=Y&twotrs_isp_noti=N&apprun_check=N&auth_charset=utf8" />
<input type="hidden" name="P_QUOTABASE" id="P_QUOTABASE" value="01:02:03:04:05:06:07:08:09:10:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:28:29:30:31:32:33:34:35:36" />

<input type="hidden" name="P_NOTI" id="P_NOTI" value="" />
<input type="hidden" name="P_MOBILE" id="P_MOBILE" value="" />
<input type="hidden" name="P_EMAIL" id="P_EMAIL" value="" />
<input type="button" onclick="formSubmit();" >신용카드T3-4</>
</form>	

<!-- 상품권관련 -->
<form id="giftNumberCertIf " name="giftNumberCertIf"  method="post" target="sub" style="display:none;">
    <input type="text" id="GIFTNO" name="GIFTNO" value=""/>
    <input type="text" id="RETURNDATA" name="RETURNDATA" value=""/>
    <input type="hidden" id="returnURL" name="returnURL" value=""/>
</form>